{"color":"red","level":"error","message":"GETPRODUCTS : Error: Evaluation failed: TypeError: Cannot read properties of null (reading 'innerText')\n    at __puppeteer_evaluation_script__:8:33"}
{"color":"red","level":"error","message":"GETPRODUCTS : Error: Evaluation failed: TypeError: Cannot read properties of null (reading 'innerText')\n    at __puppeteer_evaluation_script__:12:41"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3274080005003',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3274080005003 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3274080005003/spring-water-cristaline',\n           product_name: 'Spring water - Cristaline - 1,5 l',\n           quantity: '1,5 l',\n           categories: [\n             'Beverages',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Natural mineral waters'\n           ],\n           packaging: [\n             '01 PETE',\n             'Plastic'\n           ],\n           brands: [\n             'Cristaline'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/327/408/000/5003/front_en.797.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3274080005003' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3017620422003',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017620422003 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017620422003/nutella-ferrero-nutella',\n           product_name: 'Nutella - Ferrero Nutella - 400 g',\n           quantity: '400 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads',\n             'Spreads Breakfasts Sweet spreads Pâtes à tartiner Hazelnut spreads Chocolate spreads Cocoa and hazelnuts spreads',\n             'نوتلا'\n           ],\n           packaging: [\n             'Verre'\n           ],\n           brands: [\n             'Ferrero Nutella',\n             'نوتيلا'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/762/042/2003/front_en.327.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017620422003' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7622210449283',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210449283 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210449283/prince-chocolat-lu',\n           product_name: 'Prince Chocolat - LU - 300 g e',\n           quantity: '300 g e',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits'\n           ],\n           packaging: [\n             'Film en plastique',\n             'Paquet',\n             'Etui en carton'\n           ],\n           brands: [\n             'LU',\n             'MONDELEZ'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/044/9283/front_en.427.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210449283' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5449000000996',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5449000000996 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5449000000996/coca-cola-6er-pack',\n           product_name: 'Coca-Cola 6er Pack - 1.98l',\n           quantity: '1.98l',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Sodas',\n             'Colas',\n             'Cola with sugar'\n           ],\n           packaging: [\n             'Drink can aluminium',\n             '41-ALU',\n             'Green Dot',\n             'aluminium-can'\n           ],\n           brands: [\n             'Coca-Cola'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/544/900/000/0996/front_en.596.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5449000000996' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5449000131805',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5449000131805 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5449000131805/coca-cola-zero',\n           product_name: 'Coca-Cola Zero - 330ml',\n           quantity: '330ml',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Sodas',\n             'Bebida de cola light',\n             'Bebidas',\n             'Bebidas carbonatadas',\n             'Bebidas de cola',\n             'Bebidas endulzadas artificialmente',\n             'Bebidas light',\n             'Bebidas no alcohólicas',\n             'Sodas light'\n           ],\n           packaging: [\n             'Aluminium-can',\n             '41 ALU'\n           ],\n           brands: [\n             'Coca-Cola'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/544/900/013/1805/front_en.474.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5449000131805' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3017620425035',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017620425035 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017620425035/nutella-ferrero',\n           product_name: 'Nutella - Ferrero - 1 kg',\n           quantity: '1 kg',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'Pot',\n             'Verre',\n             'Couvercle',\n             'Plastique',\n             'Carton',\n             'Plaque'\n           ],\n           brands: [\n             'Ferrero',\n             'Nutella'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/762/042/5035/front_en.73.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017620425035' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3229820129488',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820129488 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820129488/muesli-raisin-figue-abricot-bjorg',\n           product_name: 'Muesli Raisin, Figue, Abricot - Bjorg - 375 g',\n           quantity: '375 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Cereals with fruits',\n             'Mueslis with fruits'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Pensez au tri!',\n             'Point vert',\n             'Sachet plastique à jeter'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/012/9488/front_fr.184.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820129488' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3175680011480',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175680011480 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175680011480/biscuit-sesame-gerble',\n           product_name: 'Biscuit Sésame - Gerblé - 230 g',\n           quantity: '230 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits'\n           ],\n           packaging: [\n             'Carton',\n             'Sachets',\n             '20 biscuits en 4 sachets',\n             'Packet',\n             'Paquetes'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/001/1480/front_fr.139.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175680011480' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '8000500310427',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8000500310427 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8000500310427/nutella-biscuits-ferrero',\n           product_name: 'Nutella biscuits - Ferrero - 304 g',\n           quantity: '304 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits'\n           ],\n           packaging: [\n             'Plastique',\n             'mixed plastic-packet',\n             'Enveloppe'\n           ],\n           brands: [\n             'Ferrero'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/800/050/031/0427/front_en.116.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8000500310427' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3228857000166',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228857000166 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228857000166/harrys-pain-de-mie-100-mie-complet-sans-croute',\n           product_name: 'Harrys pain de mie 100% mie complet sans croute - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'Sliced breads without crust',\n             'Wholemeal breads',\n             'Wholemeal sliced breads'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Sachet en plastique',\n             'Enveloppe'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/700/0166/front_fr.158.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228857000166' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n       +   code: Int,\n       +   barcode: String,\n       +   url: String,\n       +   product_name: String,\n       +   quantity: String,\n       ?   categories?: ProductCreatecategoriesInput | String[],\n       ?   packaging?: ProductCreatepackagingInput | String[],\n       ?   brands?: ProductCreatebrandsInput | String[],\n       +   image_url: String,\n       ?   id?: String,\n       ?   status?: draft | imported,\n       ?   imported_at?: DateTime\n         }\n       })\n\nArgument code for data.code is missing.\nArgument barcode for data.barcode is missing.\nArgument url for data.url is missing.\nArgument product_name for data.product_name is missing.\nArgument quantity for data.quantity is missing.\nArgument image_url for data.image_url is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7613034626844',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613034626844 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613034626844/cereales-chocapic-nestle',\n           product_name: 'Céréales chocapic - Nestlé - 430 g',\n           quantity: '430 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Breakfast cereals fortified with vitamins and chemical elements',\n             'Chocolate cereals',\n             'Extruded cereals',\n             'Chocolate wheat flakes',\n             'Chocolate wheat grain flakes fortified with vitamins and chemical elements'\n           ],\n           packaging: [\n             'Film en plastique',\n             'Etui en carton',\n             'Boite',\n             'Boîte Carton',\n             'Sachet Plastique'\n           ],\n           brands: [\n             'Nestlé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/462/6844/front_fr.199.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613034626844' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '8001505005592',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8001505005592 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8001505005592/nocciolata-pate-a-tartiner-au-cacao-et-noisettes-rigoni-di-asiago',\n           product_name: 'Nocciolata Pâte à tartiner au cacao et noisettes - Rigoni di Asiago - 270 g',\n           quantity: '270 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'Bocal',\n             'Verre'\n           ],\n           brands: [\n             'Rigoni di Asiago'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/800/150/500/5592/front_fr.113.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8001505005592' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3228857000852',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228857000852 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228857000852/harrys',\n           product_name: 'Harrys - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'Sliced breads without crust'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/700/0852/front_en.160.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228857000852' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3033710065967',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3033710065967 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3033710065967/nesquik-nestle',\n           product_name: 'Nesquik - Nestlé - 1000 g',\n           quantity: '1000 g',\n           categories: [\n             'Beverages',\n             'Breakfasts',\n             'Cocoa and its products',\n             'Cocoa and chocolate powders',\n             'Instant beverages',\n             'Chocolate powders'\n           ],\n           packaging: [\n             'Plastique',\n             'Boîte',\n             'Opercule en plastique'\n           ],\n           brands: [\n             'Nestlé',\n             'Nesquik'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/303/371/006/5967/front_en.350.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3033710065967' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3229820019307',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820019307 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820019307/flocons-d-avoine-bjorg',\n           product_name: 'Flocons d\\'avoine - Bjorg - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Flakes',\n             'Cereal flakes',\n             'Rolled flakes',\n             'Rolled oats'\n           ],\n           packaging: [\n             '1 sachet en plastique à jeter'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/001/9307/front_en.195.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820019307' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3046920022651',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3046920022651 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3046920022651/lindt-chocolate-excellence',\n           product_name: 'Lindt Chocolate Excellence - 100 g e',\n           quantity: '100 g e',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Chocolates',\n             'Dark chocolates',\n             'Dark chocolate bar with more than 70% cocoa'\n           ],\n           packaging: [\n             'Carton',\n             'Aluminium',\n             'Emballage carton'\n           ],\n           brands: [\n             'Lindt',\n             'Lindt EXCELLENCE'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/304/692/002/2651/front_fr.114.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3046920022651' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3229820100234',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820100234 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820100234/fourres-chocolat-noir-bio-bjorg',\n           product_name: 'Fourrés Chocolat noir BIO - bjorg - 225 g',\n           quantity: '225 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits',\n             'Filled biscuits',\n             'fr:Biscuits-fourres-chocolat'\n           ],\n           packaging: [\n             'film plastique à jeter',\n             'étui carton à recycler',\n             'Film en plastique'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/010/0234/front_fr.132.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820100234' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5010477348678',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5010477348678 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5010477348678/special-muesli-30-fruits-noix-cereales-completes-jordans',\n           product_name: 'Special Muesli 30% fruits & noix céréales complètes - Jordans - 750 g',\n           quantity: '750 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Cereals with fruits',\n             'Mueslis with fruits'\n           ],\n           packaging: [\n             'étui en carton à recycler',\n             'sachet en plastique à jeter'\n           ],\n           brands: [\n             'Jordans'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/501/047/734/8678/front_fr.195.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5010477348678' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3256540000698',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3256540000698 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3256540000698/pains-au-lait-pasquier',\n           product_name: 'Pains au lait - Pasquier - 350 g',\n           quantity: '350 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Snacks',\n             'Cereals and potatoes',\n             'Sweet snacks',\n             'Breakfasts',\n             'Viennoiseries',\n             'Breads',\n             'Brioches',\n             'Special breads',\n             'Milk bread rolls',\n             'Plain milk bread rolls'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Point vert',\n             'Pensez au tri!',\n             'Clip et sachet plastique à jeter',\n             'Sachet',\n             'Clip en plastique',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Pasquier',\n             'Brioche Pasquier'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/325/654/000/0698/front_fr.126.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3256540000698' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3175680011534',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175680011534 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175680011534/biscuit-lait-chocolat-gerble',\n           product_name: 'Biscuit lait chocolat - Gerblé - 230 g',\n           quantity: '230 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Breakfasts',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits',\n             'Crispy biscuits',\n             'Diet crispy biscuit',\n             'Dry biscuits',\n             'Biscuit snack with chocolate filling',\n             'Biscuit with chocolate',\n             'Biscuit with milk',\n             'Breakfast biscuit',\n             'Breakfast biscuit with cereals fortified with vitamins and chemical elements',\n             'Breakfast biscuit with chocolate',\n             'Crispy biscuit with reduced-fat chocolate',\n             'Milk chocolate biscuits'\n           ],\n           packaging: [\n             'boîte',\n             'Carton',\n             'Sec',\n             'Plastique'\n           ],\n           brands: [\n             'Gerblé',\n             'Gerblé Vitalité'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/001/1534/front_fr.118.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175680011534' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3268840001008',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3268840001008 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3268840001008/cristaline-eau-de-source',\n           product_name: 'Cristaline Eau de source - 50 cl',\n           quantity: '50 cl',\n           categories: [\n             'Beverages',\n             'Waters',\n             'Spring waters',\n             'Unsweetened beverages'\n           ],\n           packaging: [\n             'Point vert',\n             'Triman',\n             'Bouteille et bouchon 100% recyclable',\n             'PET',\n             'Bottle'\n           ],\n           brands: [\n             'Cristaline'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/326/884/000/1008/front_fr.330.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3268840001008' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3033710065066',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3033710065066 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3033710065066/nesquik-poudre-cacaotee-boite-nestle',\n           product_name: 'NESQUIK Poudre Cacaotée boîte - Nestlé - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Beverages',\n             'Cocoa and its products',\n             'Cocoa and chocolate powders',\n             'Instant beverages',\n             'Chocolate powders'\n           ],\n           packaging: [\n             'Plastique',\n             'boîte',\n             'Opercule en plastique'\n           ],\n           brands: [\n             'Nestlé',\n             'Nesquik'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/303/371/006/5066/front_en.233.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3033710065066' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3046920022606',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3046920022606 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3046920022606/excellence-85-cacao-chocolat-noir-puissant-lindt-lindt',\n           product_name: 'Excellence 85% Cacao Chocolat Noir Puissant Lindt % Lindt - 100 g',\n           quantity: '100 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Chocolates',\n             'Cooking helpers',\n             'Dark chocolates',\n             'Pastry helpers',\n             'Dark chocolate bar with more than 70% cocoa',\n             'Extra fine dark chocolates'\n           ],\n           packaging: [\n             'Tablette',\n             'Sec',\n             'papier aluminium',\n             'emballage carton'\n           ],\n           brands: [\n             'Lindt'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/304/692/002/2606/front_en.102.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3046920022606' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3168930010265',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3168930010265 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3168930010265/cruesli-melange-de-noix-quaker',\n           product_name: 'Cruesli Mélange de noix - QUAKER - 450 g',\n           quantity: '450 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Cereals with nuts',\n             'Crunchy cereal clusters',\n             'Cereal clusters with nuts'\n           ],\n           packaging: [\n             'Triman',\n             'Green dot',\n             'Pensez au tri!',\n             'Etui carton à recycler',\n             'Sachet plastique à jeter'\n           ],\n           brands: [\n             'QUAKER'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/316/893/001/0265/front_en.171.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3168930010265' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5010477348357',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5010477348357 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5010477348357/country-crisp-jordans',\n           product_name: 'Country Crisp - Jordans - 550 g',\n           quantity: '550 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Cereals with nuts',\n             'Crunchy cereal clusters',\n             'Cereal clusters with nuts'\n           ],\n           packaging: [\n             'Triman',\n             'Point vert',\n             'Pensez au tri!',\n             'Sachet plastique à jeter',\n             'Étui carton à recycler',\n             'FSC Recyclé'\n           ],\n           brands: [\n             'Jordans'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/501/047/734/8357/front_en.155.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5010477348357' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3760049790214',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3760049790214 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3760049790214/pain-de-mie-bio-la-boulangere-bio',\n           product_name: 'Pain De Mie Bio - La Boulangère Bio - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Breads',\n             'Sliced breads',\n             'Wholemeal breads',\n             'Wholemeal sliced breads'\n           ],\n           packaging: [\n             'Sachet plastique',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'La Boulangère Bio',\n             'La Boulangère'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/376/004/979/0214/front_fr.132.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3760049790214' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3175681851849',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175681851849 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175681851849/biscuit-pomme-noisette-gerble',\n           product_name: 'Biscuit pomme noisette - Gerblé - 230 g',\n           quantity: '230 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Snacks',\n             'Cereals and potatoes',\n             'Sweet snacks',\n             'Breakfasts',\n             'Cereals and their products',\n             'Biscuits and cakes',\n             'Breakfast cereals',\n             'Biscuits'\n           ],\n           packaging: [\n             '4 sachets plastiques de 4 biscuits',\n             'Carton',\n             'Film en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/185/1849/front_fr.124.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175681851849' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3392460480827',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3392460480827 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3392460480827/biscottes-heudebert',\n           product_name: 'Biscottes heudebert - 300 g e',\n           quantity: '300 g e',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Rusks',\n             'Multigrain rusks'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Etui',\n             'Carton',\n             'Film plastique à jeter',\n             'Étui carton à recycler',\n             'boite carton et emballage individuel'\n           ],\n           brands: [\n             'Heudebert'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/339/246/048/0827/front_en.72.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3392460480827' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3155250358788',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3155250358788 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3155250358788/primevere-bio-doux-tartine-cuisson',\n           product_name: 'Primevère Bio doux Tartine & Cuisson - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Fats',\n             'Spreads',\n             'Salted spreads',\n             'Spreadable fats',\n             'Vegetable fats',\n             'Plant-based spreads',\n             'Margarines',\n             'Light margarines'\n           ],\n           packaging: [\n             'Plastique',\n             'Barquette',\n             'Frais',\n             'boîte',\n             'Opercule en métal'\n           ],\n           brands: [\n             'Primevère'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/315/525/035/8788/front.3.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3155250358788' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3760020507350',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3760020507350 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3760020507350/pur-beurre-de-cacahuete-lea-nature',\n           product_name: 'Pur beurre de cacahuète - Léa Nature - 350 g',\n           quantity: '350 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Legumes and their products',\n             'Spreads',\n             'Nuts and their products',\n             'Plant-based spreads',\n             'Oilseed purees',\n             'Legume butters',\n             'Nut butters',\n             'Peanut butters'\n           ],\n           packaging: [\n             'Bocal',\n             'Verre',\n             'métal',\n             'Bocal en verre',\n             'Couvercle en métal'\n           ],\n           brands: [\n             'Léa Nature'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/376/002/050/7350/front_en.257.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3760020507350' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3228857000906',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228857000906 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228857000906/american-sandwich-complet-harrys',\n           product_name: 'American Sandwich Complet - Harrys - 600 g',\n           quantity: '600 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'Wholemeal breads',\n             'Wholemeal sliced breads'\n           ],\n           packaging: [\n             'Point vert',\n             'Pensez au tri!',\n             'Terracycle',\n             'sachet en plastique à jeter',\n             'attache à recycler'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/700/0906/front_fr.163.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228857000906' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3017620420047',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017620420047 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017620420047/nutella-ferrero',\n           product_name: 'Nutella - Ferrero - 975 g',\n           quantity: '975 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'Verre',\n             'Couvercle',\n             'Carton',\n             'Opercule',\n             'Pot'\n           ],\n           brands: [\n             'Ferrero'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/762/042/0047/front_en.181.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017620420047' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3057640257773',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3057640257773 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3057640257773/naturelle-volcanique-volvic',\n           product_name: 'naturelle volcanique - volvic - 1,5 L',\n           quantity: '1,5 L',\n           categories: [\n             'Beverages',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Natural mineral waters',\n             'Unsweetened beverages'\n           ],\n           packaging: [\n             'Bouteille',\n             'Plastique',\n             'Plastikflasche'\n           ],\n           brands: [\n             'Volvic'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/305/764/025/7773/front_fr.237.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3057640257773' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7613035040823',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613035040823 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613035040823/chocolat-noir-pour-preparation-patissiere-nestle',\n           product_name: 'Chocolat noir pour préparation pâtissière - Nestlé - 205 g',\n           quantity: '205 g',\n           categories: [\n             'Snacks',\n             'Desserts',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Chocolates',\n             'Dark chocolates',\n             'Dark chocolate bar for cooking with more than 40% cocoa'\n           ],\n           packaging: [\n             'Papier',\n             'Aluminium',\n             'Tablette',\n             'Boite'\n           ],\n           brands: [\n             'Nestlé',\n             'NESTLE DESSERT',\n             'Tablettes'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/504/0823/front_en.190.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613035040823' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3229820769165',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820769165 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820769165/muesli-avoine-chocolat-bio-bjorg',\n           product_name: 'Muesli avoine chocolat bio - Bjorg - 375 g',\n           quantity: '375 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Mueslis with chocolate'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Sec',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/076/9165/front_en.134.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820769165' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3229820787015',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820787015 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820787015/amande-sans-sucre-bjorg',\n           product_name: 'Amande sans sucre - Bjorg - 1 l',\n           quantity: '1 l',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based foods',\n             'Nuts and their products',\n             'Plant-based beverages',\n             'Milk substitute',\n             'Plant milks',\n             'Nut milks',\n             'Almond milks',\n             'Unsweetened natural almond milks'\n           ],\n           packaging: [\n             'Brique',\n             'Carton',\n             'Frais',\n             'Tetra Pak',\n             'Brique en carton'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/078/7015/front_fr.130.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820787015' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7613035974685',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613035974685 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613035974685/hepar',\n           product_name: 'Hépar - 1 L',\n           quantity: '1 L',\n           categories: [\n             'Beverages',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Natural mineral waters',\n             'Non-carbonated natural mineral waters'\n           ],\n           packaging: [\n             'Plastique',\n             'bouchon plastique',\n             'Bouteille en plastique',\n             'Bouchon en plastique'\n           ],\n           brands: [\n             'Hépar'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/597/4685/front_fr.180.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613035974685' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '8001505005707',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8001505005707 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8001505005707/nocciolata-rigoni-di-asiago',\n           product_name: 'Nocciolata - Rigoni di Asiago - 700 g',\n           quantity: '700 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads',\n             'fr:nocciolata'\n           ],\n           packaging: [\n             'Bocal',\n             'Verre',\n             'Pot'\n           ],\n           brands: [\n             'Rigoni di Asiago'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/800/150/500/5707/front_fr.128.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8001505005707' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '8002270014901',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8002270014901 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8002270014901/san-pellegrino',\n           product_name: 'San Pellegrino - 1 L',\n           quantity: '1 L',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Carbonated waters',\n             'Natural mineral waters',\n             'Carbonated natural mineral waters'\n           ],\n           packaging: [\n             'bouteille plastique',\n             'bouchon plastique',\n             'Bouteille',\n             'Bouteille en plastique',\n             'Bouchon en plastique',\n             'plastic fles'\n           ],\n           brands: [\n             'San Pellegrino'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/800/227/001/4901/front_en.196.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8002270014901' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3017620421006',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017620421006 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017620421006/nutella-pate-a-tartiner-noisettes-cacao-t-750-pot-de-750-gr-ferrero',\n           product_name: 'Nutella pate a tartiner noisettes-cacao t.750 pot de 750 gr - Ferrero - 750 g',\n           quantity: '750 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'Pot',\n             'Verre',\n             'Couvercle',\n             'Plastique',\n             'Plaque',\n             'Opercule',\n             'Carton'\n           ],\n           brands: [\n             'Ferrero'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/762/042/1006/front_fr.240.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017620421006' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3229820160672',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820160672 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820160672/croustillant-chocolat-bjorg',\n           product_name: 'Croustillant Chocolat - Bjorg - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Chocolate cereals',\n             'Crunchy cereal clusters',\n             'Cereal clusters with chocolate'\n           ],\n           packaging: [\n             'Sachet'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/016/0672/front_fr.248.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820160672' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7300400481588',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7300400481588 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7300400481588/wasa-tartine-croustillante-fibres',\n           product_name: 'Wasa tartine croustillante fibres - 230 g',\n           quantity: '230 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Rusks',\n             'fr:Pains croustillants'\n           ],\n           packaging: [\n             'Papier',\n             'Enveloppe'\n           ],\n           brands: [\n             'Wasa'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/730/040/048/1588/front_fr.142.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7300400481588' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3451790988677',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3451790988677 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3451790988677/le-beurre-tendre-barquette-doux-elle-vire',\n           product_name: 'Le Beurre Tendre barquette doux - Elle & Vire - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Dairies',\n             'Fats',\n             'Spreads',\n             'Spreadable fats',\n             'Animal fats',\n             'Milkfat',\n             'Dairy spread',\n             'Butters',\n             'Unsalted butters',\n             'Sweet cream butters',\n             'Butter-82-fat-unsalted-easy-to-spread',\n             'fr:Beurres tendres'\n           ],\n           packaging: [\n             'Barquette',\n             'Plastique',\n             'Frais',\n             'Sous atmosphère protectrice',\n             'PP',\n             'Barquette et couvercle et opercule à jeter',\n             'Barquette plastique'\n           ],\n           brands: [\n             'Elle & Vire',\n             'Savencia'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/345/179/098/8677/front_fr.176.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3451790988677' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3229820782560',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820782560 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820782560/muesli-superfruits-bjorg',\n           product_name: 'Muesli Superfruits - Bjorg - 375 g',\n           quantity: '375 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Cereals with fruits',\n             'Mueslis with fruits'\n           ],\n           packaging: [\n             'Pensez au tri!',\n             'Sachet plastique à jeter',\n             'Emballage issu à 40% de canne à sucre',\n             'Sachet plastique de 9 g'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/078/2560/front_fr.131.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820782560' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7622210601988',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210601988 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210601988/lu',\n           product_name: 'LU - 200 g e',\n           quantity: '200 g e',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Cakes',\n             'Chocolate biscuits',\n             'Dry biscuits',\n             'Shortbread cookies',\n             'Biscuit with chocolate covering',\n             'Digestives covered with chocolate',\n             'Milk chocolate biscuits',\n             'Shortbread cookie with chocolate'\n           ],\n           packaging: [\n             'sachet plastique',\n             'étui carton',\n             'Sec'\n           ],\n           brands: [\n             'LU'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/060/1988/front_en.168.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210601988' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3029330022428',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3029330022428 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3029330022428/maxi-tranches-sans-sucre-ajoute-complet-550-gr-jacquet',\n           product_name: 'Maxi Tranches sans sucre ajouté Complet 550 GR - Jacquet - 550 g',\n           quantity: '550 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'Wholemeal breads',\n             'Wholemeal sliced breads'\n           ],\n           packaging: [\n             'Plastique',\n             'Sachet',\n             'Enveloppe'\n           ],\n           brands: [\n             'Jacquet'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/302/933/002/2428/front_fr.107.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3029330022428' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7622210713780',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210713780 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210713780/belvita-petit-dejeuner-original-chocolat-8-x-50-g-lu',\n           product_name: 'Belvita Petit Déjeuner Original Chocolat 8 x 50 g - LU - 400 g',\n           quantity: '400 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Breakfasts',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits',\n             'Dark chocolate biscuits'\n           ],\n           packaging: [\n             'Etui-carton',\n             'Sachet-plastique',\n             'Boite'\n           ],\n           brands: [\n             'LU'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/071/3780/front_fr.144.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210713780' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3168930009078',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3168930009078 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3168930009078/quaker-oats-flocons-d-avoine-complete',\n           product_name: 'Quaker Oats Flocons d\\'avoine complète - 550 g',\n           quantity: '550 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Flakes',\n             'Cereal flakes',\n             'Rolled flakes',\n             'Rolled oats'\n           ],\n           packaging: [\n             'Carton',\n             'Boîte',\n             'Pensez au tri!',\n             'Green dot',\n             'Étui carton à recycler',\n             'Triman',\n             'Paquet',\n             'boîte de carton',\n             'Etui en carton'\n           ],\n           brands: [\n             'QUAKER',\n             'Oats'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/316/893/000/9078/front_en.148.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3168930009078' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3229820021027',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820021027 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820021027/p-tit-nature-complet-24-biscuits-bjorg',\n           product_name: 'P\\'tit Nature Complet 24 biscuits - Bjorg - 200g',\n           quantity: '200g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Cakes',\n             'Dry biscuits',\n             'fr:Biscuits secs céréales complètes',\n             'fr:Gâteaux secs',\n             'fr:Gâteaux secs céréales complètes'\n           ],\n           packaging: [\n             'Paquet',\n             'plastique',\n             'papier',\n             'Sachet en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/002/1027/front_fr.162.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820021027' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3159470000120',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3159470000120 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3159470000120/corn-flakes-kellogg-s',\n           product_name: 'Corn flakes - Kellogg\\'s - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Flakes',\n             'Cereal flakes',\n             'Extruded cereals',\n             'Extruded flakes',\n             'Corn flakes'\n           ],\n           packaging: [\n             'Carton',\n             'Sachet plastique',\n             'boîte'\n           ],\n           brands: [\n             'Kellogg\\'s'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/315/947/000/0120/front_en.147.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3159470000120' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5010477348395',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5010477348395 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5010477348395/country-crisp-chocolat-noir-70-cacao-jordans',\n           product_name: 'Country Crisp - Chocolat noir 70% cacao - Jordans - 550 g',\n           quantity: '550 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Chocolate cereals',\n             'Crunchy cereal clusters',\n             'Cereal clusters with chocolate'\n           ],\n           packaging: [\n             'étui en carton à recycler',\n             'sachet en plastique à jeter'\n           ],\n           brands: [\n             'Jordans'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/501/047/734/8395/front_fr.115.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5010477348395' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3046920029759',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3046920029759 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3046920029759/dark-chocolate-90-cocoa-lindt',\n           product_name: 'Dark Chocolate 90% cocoa - Lindt - 100 g',\n           quantity: '100 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Chocolates',\n             'Dark chocolates',\n             'Extra fine dark chocolates'\n           ],\n           packaging: [\n             'Papel de aluminio',\n             'Caja de cartón',\n             'Carton',\n             'Karton',\n             'Emballage',\n             'box cardboard',\n             'Aluminium wrap',\n             'card-box',\n             'foil-wrapper'\n           ],\n           brands: [\n             'Lindt'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/304/692/002/9759/front_en.254.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3046920029759' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3017620429484',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017620429484 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017620429484/nutella-ferrero',\n           product_name: 'Nutella - Ferrero - 825 g',\n           quantity: '825 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'Verre',\n             'Couvercle',\n             'Glas',\n             'Kunststoff',\n             'Plastique',\n             'Tarro',\n             'Plástico',\n             'Pot',\n             'Opercule',\n             'Carton',\n             'Plaque'\n           ],\n           brands: [\n             'Ferrero'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/762/042/9484/front.8.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017620429484' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5410188031072',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5410188031072 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5410188031072/gazpacho-alvalle',\n           product_name: 'Gazpacho - Alvalle - 1 L',\n           quantity: '1 L',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based foods',\n             'Fruits and vegetables based foods',\n             'Meals',\n             'Vegetables based foods',\n             'Fresh foods',\n             'Soups',\n             'Fresh meals',\n             'Refrigerated foods',\n             'Vegetable soups',\n             'Cold soups',\n             'Refrigerated meals',\n             'Gazpacho',\n             'Refrigerated soups'\n           ],\n           packaging: [\n             'Brique',\n             'Carton',\n             'Frais',\n             'Plastique',\n             'Pasteurisé'\n           ],\n           brands: [\n             'Alvalle'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/541/018/803/1072/front_en.133.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5410188031072' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5010477348630',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5010477348630 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5010477348630/muesli-bio-jordans',\n           product_name: 'MUESLI BIO - Jordans - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Cereals with fruits',\n             'Mueslis with fruits'\n           ],\n           packaging: [\n             'sac en plastique à jeter',\n             'étui en carton à recycler',\n             'Etui en carton',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Jordans'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/501/047/734/8630/front_fr.133.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5010477348630' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7613035989535',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613035989535 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613035989535/le-bon-paris-herta',\n           product_name: 'Le bon paris - Herta - 140g',\n           quantity: '140g',\n           categories: [\n             'Meats',\n             'Prepared meats',\n             'Hams',\n             'White hams',\n             'Rind-less cooked ham of superior quality',\n             'Cooked ham of superior quality'\n           ],\n           packaging: [\n             'Plastique',\n             'Tranches',\n             'Tranche',\n             'Barquette',\n             'Sachet',\n             'Barquette en plastique',\n             'Film en plastique',\n             'Barquette',\n             'Film en plastique'\n           ],\n           brands: [\n             'Herta'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/598/9535/front_fr.181.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613035989535' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3045140105502',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3045140105502 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3045140105502/alpenmilch-chocolate-milka',\n           product_name: 'Alpenmilch Chocolate - Milka - 100g',\n           quantity: '100g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Chocolates',\n             'Milk chocolates',\n             'Botanas',\n             'Chocolates con leche',\n             'Snacks dulces'\n           ],\n           packaging: [\n             'Kunststoff',\n             '05 PP',\n             'Tablette',\n             'Pp-wrapper'\n           ],\n           brands: [\n             'Milka'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/304/514/010/5502/front_en.162.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3045140105502' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3033710084913',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3033710084913 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3033710084913/arome-maggi',\n           product_name: 'Arome MAGGI - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Groceries',\n             'Condiments',\n             'Sauces',\n             'Seasonings'\n           ],\n           packaging: [\n             'Verre',\n             'flacon verre',\n             'Flacon',\n             'Bouteille'\n           ],\n           brands: [\n             'Maggi'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/303/371/008/4913/front_en.106.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3033710084913' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7613035833272',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613035833272 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613035833272/perrier',\n           product_name: 'Perrier - 1 l',\n           quantity: '1 l',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Non-Alcoholic beverages',\n             'Carbonated waters',\n             'Carbonated mineral waters',\n             'Unsweetened beverages'\n           ],\n           packaging: [\n             '01 PET'\n           ],\n           brands: [\n             'Perrier'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/583/3272/front_en.149.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613035833272' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3251490332080',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3251490332080 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3251490332080/biscuits-figue-et-son-gerble',\n           product_name: 'Biscuits Figue et son - Gerblé - 210 g',\n           quantity: '210 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'fr:Biscuits au son de blé',\n             'fr:Biscuits au son de blé et la figue'\n           ],\n           packaging: [\n             'Boîte',\n             'Carton',\n             'Plastique',\n             'Film en plastique',\n             'boîte en carton sachet en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/325/149/033/2080/front_fr.105.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3251490332080' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '8712100325953',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8712100325953 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8712100325953/amora-mout-prefere-12x440g',\n           product_name: 'Amora mout prefere 12x440g - 440 g',\n           quantity: '440 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Groceries',\n             'Canned foods',\n             'Condiments',\n             'Canned plant-based foods',\n             'Sauces',\n             'Mustards',\n             'Dijon mustards',\n             'Fine mustards'\n           ],\n           packaging: [\n             'Bocal',\n             'Verre',\n             'Bocal verre',\n             'Couvercle en métal',\n             'Sec'\n           ],\n           brands: [\n             'Amora',\n             'Unilever'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/871/210/032/5953/front_en.192.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8712100325953' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3168930010906',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3168930010906 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3168930010906/cruesli-chocolat-noir-quaker',\n           product_name: 'Cruesli Chocolat noir - QUAKER - 450 g',\n           quantity: '450 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Flakes',\n             'Mueslis',\n             'Chocolate cereals',\n             'Extruded flakes',\n             'Mueslis with chocolate'\n           ],\n           packaging: [\n             'Triman',\n             'Pensez au tri!',\n             'Point vert',\n             'Sachet plastique à jeter',\n             'Etui carton à recycler',\n             'Triman'\n           ],\n           brands: [\n             'QUAKER'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/316/893/001/0906/front_en.99.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3168930010906' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3228857001231',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228857001231 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228857001231/brioche-tressee-a-la-main-sans-additifs-harrys',\n           product_name: 'Brioche tressée à la main sans additifs - Harrys - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Viennoiseries',\n             'Brioches',\n             'fr:Brioches tressées',\n             'Pure butter brioche',\n             'fr:Brioches natures'\n           ],\n           packaging: [\n             'Sachet',\n             'Sachet en plastique',\n             'Enveloppe'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/700/1231/front_fr.50.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228857001231' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7622210713926',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210713926 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210713926/belvita-brut-5-cereales-completes-lu',\n           product_name: 'Belvita Brut & 5 céréales complètes - Lu - 400 g , 8x 4 biscuits',\n           quantity: '400 g , 8x 4 biscuits',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Breakfasts',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Dry biscuits'\n           ],\n           packaging: [\n             '1 étui en carton à recycler',\n             '8 sachets en plastique à jeter'\n           ],\n           brands: [\n             'Lu'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/071/3926/front_fr.124.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210713926' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3228857000647',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228857000647 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228857000647/brioche-tranchee-nature-harrys',\n           product_name: 'Brioche tranchée nature - Harrys - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Viennoiseries',\n             'Brioches',\n             'fr:Brioches tranchées'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/700/0647/front_fr.110.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228857000647' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '4056489007180',\n                 ~~~~~~~~~~~~~~~\n           barcode: '4056489007180 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/4056489007180/maitre-jean-pierre',\n           product_name: 'Maître Jean Pierre - 750 g',\n           quantity: '750 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'Wholemeal breads',\n             'Wholemeal sliced breads'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Sachet en plastique',\n             'Fermoir',\n             'Fermoir en plastique'\n           ],\n           brands: [\n             'Maître Jean Pierre'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/405/648/900/7180/front_en.110.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '4056489007180' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5410041001204',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5410041001204 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5410041001204/tuc-original-lu',\n           product_name: 'TUC Original - LU - 100 g',\n           quantity: '100 g',\n           categories: [\n             'Snacks',\n             'Salty snacks',\n             'Appetizers',\n             'Meals',\n             'Crackers',\n             'Starters'\n           ],\n           packaging: [\n             'Kunststoff'\n           ],\n           brands: [\n             'LU',\n             'Mondelez International'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/541/004/100/1204/front_en.226.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5410041001204' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3155251205296',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3155251205296 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3155251205296/tartine-doux-primevere',\n           product_name: 'Tartine Doux - Primevère - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Fats',\n             'Spreads',\n             'Salted spreads',\n             'Spreadable fats',\n             'Vegetable fats',\n             'Plant-based spreads',\n             'Margarines',\n             'Light margarines'\n           ],\n           packaging: [\n             'Barquette',\n             'Opercule en métal'\n           ],\n           brands: [\n             'Primevère'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/315/525/120/5296/front_en.107.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3155251205296' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3502110009449',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3502110009449 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3502110009449/jus-d-orange-sans-pulpe-tropicana',\n           product_name: 'Jus d\\'orange sans pulpe - Tropicana - 1000 ml',\n           quantity: '1000 ml',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based beverages',\n             'Fruit-based beverages',\n             'Juices and nectars',\n             'Fruit juices',\n             'Non-Alcoholic beverages',\n             'Orange juices',\n             'Squeezed juices',\n             'Squeezed orange juices',\n             'fr:Jus d\\'orange sans pulpe'\n           ],\n           packaging: [\n             'Plastic',\n             'Bouteille',\n             'Bouteille en plastique'\n           ],\n           brands: [\n             'Tropicana'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/350/211/000/9449/front_fr.112.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3502110009449' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3478820023184',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3478820023184 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3478820023184/chocolat-noisette-jardin-bio',\n           product_name: 'Chocolat Noisette - Jardin Bio - 350 g',\n           quantity: '350 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'bocal en verre à recycler',\n             'couvercle en métal à recycler'\n           ],\n           brands: [\n             'Jardin Bio',\n             'Léa Nature'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/347/882/002/3184/front_en.173.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3478820023184' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '5411188119098',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5411188119098 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5411188119098/plain-with-coconut-alpro',\n           product_name: 'Plain with Coconut - Alpro - 500gr',\n           quantity: '500gr',\n           categories: [\n             'Desserts',\n             'Fermented foods',\n             'Non-dairy desserts',\n             'Non-dairy fermented foods',\n             'Non-dairy yogurts',\n             'Soy milk yogurts'\n           ],\n           packaging: [\n             'Plastico'\n           ],\n           brands: [\n             'Alpro'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/541/118/811/9098/front_en.185.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5411188119098' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7622210713889',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210713889 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210713889/belvita-petit-dejeuner-miel-et-pepites-de-chocolat-lu',\n           product_name: 'Belvita Petit-Déjeuner miel et pépites de chocolat - LU - 435 g',\n           quantity: '435 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'fr:D'\n           ],\n           packaging: [\n             'Carton'\n           ],\n           brands: [\n             'LU'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/071/3889/front_fr.136.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210713889' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '1101803',\n                 ~~~~~~~~~\n           barcode: '1101803',\n           url: 'https://world.openfoodfacts.org/product/1101803/tartines-craquantes-au-sarrasin-le-pain-des-fleurs',\n           product_name: 'Tartines craquantes au sarrasin - le pain des fleurs - 150g',\n           quantity: '150g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Crispbreads',\n             'fr:Pain de sarrasin'\n           ],\n           packaging: [\n             'Cartons'\n           ],\n           brands: [\n             'le pain des fleurs'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/1101803/front_fr.269.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '1101803' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7300400481595',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7300400481595 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7300400481595/wasa-tartine-croustillante-authentique-au-seigle',\n           product_name: 'Wasa tartine croustillante authentique au seigle - 275 g',\n           quantity: '275 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Crispbreads',\n             'fr:Pains croustillants'\n           ],\n           packaging: [\n             'Papier',\n             'Package paper',\n             'Paper recycling',\n             'Papier',\n             'Enveloppe'\n           ],\n           brands: [\n             'Wasa'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/730/040/048/1595/front_fr.131.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7300400481595' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7613036249928',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613036249928 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613036249928/eau-minerale-vittel',\n           product_name: 'Eau minérale - Vittel - 1,5 L',\n           quantity: '1,5 L',\n           categories: [\n             'Beverages',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Non-Alcoholic beverages',\n             'Natural mineral waters',\n             'Unsweetened beverages'\n           ],\n           packaging: [\n             'bouteille plastique',\n             'bouchon plastique',\n             'Bouteille en plastique',\n             'Bouchon en plastique'\n           ],\n           brands: [\n             'Vittel'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/624/9928/front_fr.177.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613036249928' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3587220002252',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3587220002252 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3587220002252/la-gache-tranchee-au-beurre-frais-et-a-la-creme-fraiche-la-fournee-doree',\n           product_name: 'La Gâche Tranchée au Beurre Frais et à la Crème Fraîche - La Fournée Dorée - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Viennoiseries',\n             'Brioches',\n             'fr:Gâches',\n             'Pure butter brioche',\n             'fr:Brioches tranchées'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Film en plastique'\n           ],\n           brands: [\n             'La Fournée Dorée'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/358/722/000/2252/front_fr.156.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3587220002252' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7622210421968',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210421968 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210421968/veritable-petit-ecolier-chocolat-au-lait-lu',\n           product_name: 'Véritable Petit Écolier Chocolat au Lait - LU - 150 g (12x 12.5 g) e',\n           quantity: '150 g (12x 12.5 g) e',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits',\n             'Petit-Beurre',\n             'Biscuit with a chocolate bar covering',\n             'Butter biscuit with chocolate',\n             'Milk chocolate biscuits',\n             'es:Galletas con tableta de chocolate con leche'\n           ],\n           packaging: [\n             'Carton',\n             'sachet individuel',\n             'Plastique'\n           ],\n           brands: [\n             'LU',\n             'Mondelez International'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/042/1968/front_fr.102.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210421968' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7622210585691',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210585691 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210585691/patamilka-aux-noisettes-milka',\n           product_name: 'Patamilka aux noisettes - Milka - 600 g',\n           quantity: '600 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'Pot',\n             'Plastique'\n           ],\n           brands: [\n             'Milka'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/058/5691/front_en.79.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210585691' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3366321052331',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3366321052331 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3366321052331/st-hubert-bio-doux-245g-ss-hdp',\n           product_name: 'St hubert bio doux 245g ss hdp - 245 g',\n           quantity: '245 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Fats',\n             'Spreads',\n             'Salted spreads',\n             'Spreadable fats',\n             'Vegetable fats',\n             'Plant-based spreads',\n             'Margarines',\n             'Light margarines'\n           ],\n           packaging: [\n             'Barquette',\n             'Plastique',\n             'Réfrigéré'\n           ],\n           brands: [\n             'St Hubert',\n             'St hubert bio'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/336/632/105/2331/front_fr.118.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3366321052331' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3041090063206',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3041090063206 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3041090063206/cracotte-cereales-completes-lu',\n           product_name: 'Cracotte Céréales Complètes - lu - 250',\n           quantity: '250',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Rusks',\n             'Crispbreads'\n           ],\n           packaging: [\n             'Carton',\n             'Plastique à jeter',\n             'Étui carton à recycler',\n             'Plastique',\n             'boîte carton'\n           ],\n           brands: [\n             'Lu'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/304/109/006/3206/front_fr.132.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3041090063206' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7613036669146',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613036669146 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613036669146/nestle-chocapic-bio-cereales',\n           product_name: 'NESTLE CHOCAPIC BIO Céréales - 375 g',\n           quantity: '375 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Chocolate cereals'\n           ],\n           packaging: [\n             'Carton',\n             'sachet plastique',\n             'Film en plastique',\n             'Etui en carton',\n             'Conteneur'\n           ],\n           brands: [\n             'Nestlé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/666/9146/front_fr.106.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613036669146' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3159470005071',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3159470005071 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3159470005071/cereales-extra-pepites-kellogg-s-chocolat-noisettes',\n           product_name: 'Céréales Extra Pepites Kellogg\\'s Chocolat Noisettes - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Chocolate cereals',\n             'Crunchy cereal clusters',\n             'Mueslis with chocolate',\n             'Cereal clusters with chocolate'\n           ],\n           packaging: [\n             'sachet plastique',\n             'Point vert',\n             'Triman',\n             'Sachet plastique'\n           ],\n           brands: [\n             'Kellogg\\'s'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/315/947/000/5071/front_fr.137.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3159470005071' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3228886048436',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228886048436 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228886048436/lipton-ice-tea-saveur-peche',\n           product_name: 'Lipton Ice Tea saveur Pêche - 1,5 L',\n           quantity: '1,5 L',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based beverages',\n             'Artificially sweetened beverages',\n             'Tea-based beverages',\n             'Iced teas',\n             'Peach flavored iced teas',\n             'Sweetened beverages'\n           ],\n           packaging: [\n             'Bouteille',\n             'Plastique',\n             'Bouteille plastique recyclé',\n             'PET',\n             'Bouteille en plastique',\n             'Bouchon en plastique'\n           ],\n           brands: [\n             'Lipton'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/888/604/8436/front.3.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228886048436' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7613035530799',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613035530799 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613035530799/nesquik-moins-de-sucres-nestle',\n           product_name: 'NESQUIK Moins de Sucres - Nestlé - 350 g',\n           quantity: '350 g',\n           categories: [\n             'Beverages',\n             'Breakfasts',\n             'Cocoa and its products',\n             'Hot beverages',\n             'Cocoa and chocolate powders',\n             'Instant beverages',\n             'Chocolate powders'\n           ],\n           packaging: [\n             'boîte',\n             'Plastique',\n             'Opercule en plastique',\n             'Pehd',\n             'Pp'\n           ],\n           brands: [\n             'Nestlé',\n             'Nesquik'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/553/0799/front_en.199.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613035530799' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '4006985902304',\n                 ~~~~~~~~~~~~~~~\n           barcode: '4006985902304 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/4006985902304/cacao-en-poudre-non-sucre-van-houten',\n           product_name: 'Cacao en poudre non sucré - Van houten - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Cocoa and its products',\n             'Cocoa and chocolate powders',\n             'Cocoa powders'\n           ],\n           packaging: [\n             'boîte en carton et sachet',\n             'Etui en carton'\n           ],\n           brands: [\n             'Van houten'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/400/698/590/2304/front_fr.149.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '4006985902304' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3251490307002',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3251490307002 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3251490307002/gouter-pepites-de-chocolat-gerble',\n           product_name: 'Goûter pépites de chocolat - Gerblé - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits'\n           ],\n           packaging: [\n             'boîte',\n             'Carton',\n             'sachet plastique'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/325/149/030/7002/front_fr.55.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3251490307002' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3182180012190',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3182180012190 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3182180012190/balance-biscottes-pasquier',\n           product_name: 'Balance Biscottes - Pasquier - 300 g',\n           quantity: '300 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Breads',\n             'Products with reduced salt',\n             'Rusks',\n             'fr:Biscottes pauvres en sel'\n           ],\n           packaging: [\n             'Boîte',\n             'Carton',\n             'Sachet plastique',\n             '2 étuis fraîcheur'\n           ],\n           brands: [\n             'Pasquier'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/318/218/001/2190/front_fr.121.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3182180012190' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3228857001194',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228857001194 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228857001194/harrys-beau-bon-pain-de-mie-farine-de-ble-cereales-graines',\n           product_name: 'Harrys beau & bon pain de mie farine de ble cereales & graines - 320 g',\n           quantity: '320 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'White breads',\n             'Bread white from wheat flour of the highest grade GOST 26987-86',\n             'Multigrain sliced breads'\n           ],\n           packaging: [\n             'Plastique',\n             'Sachet en plastique',\n             'barquette',\n             'Enveloppe'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/700/1194/front_fr.41.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228857001194' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3068320120256',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3068320120256 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3068320120256/natuurlijk-mineraalwater-evian',\n           product_name: 'Natuurlijk mineraalwater - Evian - 1.5L',\n           quantity: '1.5L',\n           categories: [\n             'Beverages',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Non-Alcoholic beverages',\n             'Natural mineral waters',\n             'Unsweetened beverages'\n           ],\n           packaging: [\n             '6x1.5l',\n             'Bouteille',\n             'bouteille plastique',\n             'plastic fles',\n             'Pet-fles'\n           ],\n           brands: [\n             'Evian'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/306/832/012/0256/front_en.61.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3068320120256' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3033490004521',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3033490004521 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3033490004521/yaourt-nature-danone',\n           product_name: 'Yaourt nature - Danone - 500 g (4 × 125 g)',\n           quantity: '500 g (4 × 125 g)',\n           categories: [\n             'Dairies',\n             'Fermented foods',\n             'Fermented milk products',\n             'Yogurts',\n             'Plain yogurts',\n             'fr:Nature'\n           ],\n           packaging: [\n             'Frais',\n             'Plastique',\n             'Pot'\n           ],\n           brands: [\n             'Danone'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/303/349/000/4521/front_fr.79.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3033490004521' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3023470001015',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3023470001015 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3023470001015/20-galettes-traditional-butter-biscuits-st-michel',\n           product_name: '20 Galettes : Traditional Butter Biscuits - St Michel - 130 g (20 unités) 4 paquets de 5 galettes sous cellophane',\n           quantity: '130 g (20 unités) 4 paquets de 5 galettes sous cellophane',\n           categories: [\n             'fr:Galettes-au-beurre'\n           ],\n           packaging: [\n             'Sachet en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'St Michel'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/302/347/000/1015/front.18.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3023470001015' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3175680015228',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175680015228 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175680015228/gerble',\n           product_name: 'Gerblé - 150 g',\n           quantity: '150 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Groceries',\n             'Cereals and potatoes',\n             'Condiments',\n             'Cereals and their products',\n             'Food additives',\n             'Yeast'\n           ],\n           packaging: [\n             'Carton',\n             'Plastique'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/001/5228/front.17.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175680015228' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3228857000883',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228857000883 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228857000883/harrys-pain-de-mie-extra-moelleux-nature-sans-sucres-ajoutes',\n           product_name: 'Harrys pain de mie extra moelleux nature sans sucres ajoutés - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'fr:Pains de mie blancs nature'\n           ],\n           packaging: [\n             'Tranche',\n             'Sachet',\n             'Paquet',\n             'Plastique',\n             'Enveloppe'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/700/0883/front_fr.88.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228857000883' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '8715700407760',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8715700407760 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8715700407760/tomato-ketchup-bio-heinz',\n           product_name: 'Tomato Ketchup BIO - Heinz - 580 g',\n           quantity: '580 g',\n           categories: [\n             'Groceries',\n             'Sauces',\n             'Tomato sauces',\n             'Ketchup'\n           ],\n           packaging: [\n             'Bouteille plastique',\n             'bouchon plastique'\n           ],\n           brands: [\n             'Heinz'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/871/570/040/7760/front_en.141.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8715700407760' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '7300400481571',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7300400481571 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7300400481571/leger-wasa',\n           product_name: 'Léger - Wasa - 270 g',\n           quantity: '270 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Crispbreads',\n             'fr:Pains croustillants'\n           ],\n           packaging: [\n             'papier',\n             'Point vert',\n             'Package paper - paper recycling',\n             'Papier',\n             'Enveloppe'\n           ],\n           brands: [\n             'Wasa'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/730/040/048/1571/front_fr.88.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7300400481571' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3178530410105',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3178530410105 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3178530410105/petites-madeleines-saint-michel',\n           product_name: 'Petites madeleines - SAINT MICHEL - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Biscuits and cakes',\n             'Cakes',\n             'Madeleines',\n             'Plain madeleines'\n           ],\n           packaging: [\n             'Sachet plastique',\n             'Film en plastique'\n           ],\n           brands: [\n             'SAINT MICHEL'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/853/041/0105/front_fr.156.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3178530410105' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '8712100871986',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8712100871986 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8712100871986/l-originale-moutarde-fine-de-dijon-maille',\n           product_name: 'L\\'Originale Moutarde Fine De Dijon - Maille - 350 ml',\n           quantity: '350 ml',\n           categories: [\n             'Groceries',\n             'Condiments',\n             'Sauces',\n             'Mustards',\n             'Dijon mustards',\n             'Fine mustards',\n             'fr:Moutarde Fine De Dijon'\n           ],\n           packaging: [\n             'Bocal',\n             'Verre',\n             'Wrapper',\n             'couvercle en métal',\n             'Film'\n           ],\n           brands: [\n             'Maille'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/871/210/087/1986/front_fr.121.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8712100871986' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3175680011442',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175680011442 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175680011442/biscuit-soja-orange%F0%9F%8D%8A-gerble',\n           product_name: 'Biscuit soja orange🍊 - Gerblé - 280 g',\n           quantity: '280 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Breakfasts',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Crispy biscuits',\n             'Diet crispy biscuit',\n             'Dry biscuits',\n             'Shortbread cookies',\n             'Breakfast biscuit',\n             'Shortbread biscuit with fruits',\n             'Sablés à l\\'orange'\n           ],\n           packaging: [\n             'Carton',\n             'Plastique',\n             'Sec'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/001/1442/front_en.142.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175680011442' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:26\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   await prisma.product.create({\n         data: {\n           code: '3017760290692',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017760290692 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017760290692/napolitain-l-original-lu',\n           product_name: 'Napolitain l\\'Original - Lu - 6 x 30 g',\n           quantity: '6 x 30 g',\n           categories: [\n             'Snacks',\n             'Desserts',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Cakes',\n             'Chocolate cakes'\n           ],\n           packaging: [\n             'Carton',\n             'Sachets individuels',\n             'Pensez au tri!',\n             'Sachet plastique à jeter',\n             'Point vert',\n             'Étui carton à recycler',\n             'carton',\n             'frais'\n           ],\n           brands: [\n             'Lu'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/776/029/0692/front_en.138.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017760290692' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"GETPRODUCTS : Error: Evaluation failed: TypeError: Cannot read properties of null (reading 'src')\n    at __puppeteer_evaluation_script__:13:43"}
{"color":"red","level":"error","message":"GETPRODUCTS : Error: Evaluation failed: TypeError: Cannot read properties of null (reading 'src')\n    at __puppeteer_evaluation_script__:13:43"}
{"color":"red","level":"error","message":"GETPRODUCTS : Error: Evaluation failed: TypeError: Cannot read properties of null (reading 'innerText')\n    at __puppeteer_evaluation_script__:12:41"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3041090063114',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3041090063114 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3041090063114/cracotte-lu',\n           product_name: 'Cracotte - LU - 250 g (2 × 18)',\n           quantity: '250 g (2 × 18)',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Breads',\n             'Crispbreads'\n           ],\n           packaging: [\n             'Carton recyclable',\n             'Plastique jetable'\n           ],\n           brands: [\n             'LU',\n             'Mondelez'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/304/109/006/3114/front_fr.136.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3041090063114' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3225350000501',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3225350000501 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3225350000501/pulco-lemon',\n           product_name: 'Pulco Lemon - 70 cl',\n           quantity: '70 cl',\n           categories: [\n             'Syrups'\n           ],\n           packaging: [\n             'Bouteille',\n             'Verre'\n           ],\n           brands: [\n             'Pulco',\n             'Schweppes International Limited'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/535/000/0501/front_fr.115.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3225350000501' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3088543506255',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3088543506255 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3088543506255/sirop-d-agave-sunny-via',\n           product_name: 'Sirop d\\'Agave - Sunny via - 350 g',\n           quantity: '350 g',\n           categories: [\n             'Sweeteners',\n             'Syrups',\n             'Simple syrups',\n             'Agave syrups',\n             'fr:Sirops traditionnels'\n           ],\n           packaging: [\n             'Flacon en verre',\n             'Bouchon en plastique'\n           ],\n           brands: [\n             'Sunny via'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/308/854/350/6255/front_fr.215.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3088543506255' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3017760542890',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017760542890 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017760542890/pain-grille-au-ble-complet-pelletier',\n           product_name: 'Pain grillé au blé complet - Pelletier - 500 g e',\n           quantity: '500 g e',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Rusks',\n             'Toasts'\n           ],\n           packaging: [\n             'Carton',\n             'Plastique'\n           ],\n           brands: [\n             'Pelletier',\n             'LU',\n             'Mondelez'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/776/054/2890/front_fr.128.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017760542890' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7613035676497',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613035676497 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613035676497/ricore-nestle',\n           product_name: 'Ricoré - Nestle - 260 g',\n           quantity: '260 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based foods',\n             'Plant-based beverages',\n             'Coffees',\n             'Instant beverages',\n             'Instant chicory',\n             'Instant mix of chicory and coffee powder'\n           ],\n           packaging: [\n             'Conserve',\n             'boîte',\n             'Boîte en métal',\n             'Can',\n             'Canette'\n           ],\n           brands: [\n             'Nestle',\n             'Ricore'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/567/6497/front_en.258.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613035676497' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3124480191182',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3124480191182 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3124480191182/oasis-tropical',\n           product_name: 'Oasis tropical - 2 l',\n           quantity: '2 l',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based beverages',\n             'Fruit-based beverages',\n             'Sweetened beverages'\n           ],\n           packaging: [\n             'bouteille plastique',\n             'bouchon plastique'\n           ],\n           brands: [\n             'Oasis'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/312/448/019/1182/front_fr.104.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3124480191182' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3251490320001',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3251490320001 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3251490320001/biscuit-complet-au-germe-de-ble-gerble',\n           product_name: 'Biscuit complet au germe de blé - Gerblé - 210 g',\n           quantity: '210 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits'\n           ],\n           packaging: [\n             'Carton',\n             'sachets individuels'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/325/149/032/0001/front_fr.112.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3251490320001' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5050083934100',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5050083934100 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5050083934100/cereales-special-k-kellogg-s-nature',\n           product_name: 'Céréales Special K Kellogg\\'s Nature - 440 g',\n           quantity: '440 g',\n           categories: [\n             'Aliments d\\'origine végétale',\n             'Aliments d\\'origine v�g�tale',\n             'Aliments et boissons à base de végétaux',\n             'Aliments et boissons � base de v�g�taux',\n             'Céréales et dérivés',\n             'Céréales et pommes de terre',\n             'Céréales pour petit-déjeuner',\n             'C�r�ales et d�riv�s',\n             'C�r�ales et pommes de terre',\n             'C�r�ales pour petit-d�jeuner',\n             'Flocons',\n             'Flocons de c�r�ales',\n             'Flocons extrud�s',\n             'Petit-déjeuners',\n             'Petit-d�jeuners',\n             'P�tales multic�r�ales'\n           ],\n           packaging: [\n             'Carton',\n             'Plastique'\n           ],\n           brands: [\n             'Kellogg\\'s'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/505/008/393/4100/front_fr.94.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5050083934100' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3284230006408',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3284230006408 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3284230006408/brioche-tranchee-bio-la-boulangere',\n           product_name: 'Brioche tranchée Bio - La Boulangère - 400 g',\n           quantity: '400 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Breakfasts',\n             'Viennoiseries',\n             'Brioches',\n             'Pure butter brioche',\n             'fr:Brioches tranchées'\n           ],\n           packaging: [\n             'Sachet plastique',\n             'Film en plastique'\n           ],\n           brands: [\n             'La Boulangère'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/328/423/000/6408/front_fr.111.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3284230006408' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3175681066632',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175681066632 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175681066632/biscuits-pavot-citron%F0%9F%8D%8B-gerblenutrition-et-sante',\n           product_name: 'Biscuits Pavot Citron🍋 - GerbléNutrition et Santé - 200 g, 4 sachets de 4 biscuits',\n           quantity: '200 g, 4 sachets de 4 biscuits',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Biscuits et gâteaux',\n             'Snacks sucrés'\n           ],\n           packaging: [\n             'boîte',\n             'Carton',\n             'Sachet plastique à jeter',\n             'Étui carton à recycler',\n             'Sachet plastique',\n             'Pensez au tri!',\n             'Film en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'GerbléNutrition et Santé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/106/6632/front_fr.115.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175681066632' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3061990141354',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3061990141354 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3061990141354/choco-bn-cereales-completes',\n           product_name: 'choco BN céréales complètes - 295',\n           quantity: '295',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits',\n             'Filled biscuits'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Sachet'\n           ],\n           brands: [\n             'BN'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/306/199/014/1354/front_fr.89.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3061990141354' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3068320114453',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3068320114453 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3068320114453/badoit',\n           product_name: 'Badoit® - 1 L',\n           quantity: '1 L',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Non-Alcoholic beverages',\n             'Carbonated waters',\n             'Carbonated mineral waters',\n             'Unsweetened beverages'\n           ],\n           packaging: [\n             'bouteille plastique',\n             'bouchon plastique',\n             '100% recyclable'\n           ],\n           brands: [\n             'Badoit',\n             'Danone'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/306/832/011/4453/front_fr.39.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3068320114453' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3387390321357',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3387390321357 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3387390321357/fitness-nature-cereales-nestle',\n           product_name: 'FITNESS Nature Céréales - Nestlé - 450 g',\n           quantity: '450 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals'\n           ],\n           packaging: [\n             'sachet-plastique',\n             'etui-carton',\n             'Point vert',\n             'Pensez au tri!',\n             'Triman',\n             'Film plastique à jeter',\n             'Etui carton à recycler',\n             'Etui en carton',\n             'Film en plastique',\n             'Boite'\n           ],\n           brands: [\n             'Nestlé',\n             'Fitness'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/338/739/032/1357/front_fr.152.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3387390321357' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7622210476296',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210476296 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210476296/the-biscuits-lu-the',\n           product_name: 'Thé - Biscuits - Lu thé - 350 g ℮',\n           quantity: '350 g ℮',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits'\n           ],\n           packaging: [\n             'sachet',\n             'plastique',\n             'carton',\n             'Point vert',\n             'sachet à jeter',\n             'Barquette à recycler',\n             'Paquet',\n             'Sachet'\n           ],\n           brands: [\n             'Lu thé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/047/6296/front_fr.63.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210476296' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3033710073467',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3033710073467 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3033710073467/ricore-original-nestle',\n           product_name: 'RICORE Original - Nestlé - 100 g',\n           quantity: '100 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based foods',\n             'Plant-based beverages',\n             'Coffees',\n             'Instant beverages',\n             'Instant coffees',\n             'Instant chicory',\n             'Instant mix of chicory and coffee powder'\n           ],\n           packaging: [\n             'Boîte',\n             'Acier',\n             'Métal',\n             'Can',\n             'Boîte en métal',\n             'Canette'\n           ],\n           brands: [\n             'Nestlé',\n             'Ricore'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/303/371/007/3467/front_fr.230.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3033710073467' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3155251205500',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3155251205500 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3155251205500/beurre-doux-gastronomique-president',\n           product_name: 'Beurre doux gastronomique - President - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Dairies',\n             'Fats',\n             'Spreads',\n             'Spreadable fats',\n             'Animal fats',\n             'Milkfat',\n             'Dairy spread',\n             'Butters',\n             'Sweet cream butters'\n           ],\n           packaging: [\n             'Green dot',\n             'Pensez au tri!',\n             'Feuille plastique à jeter',\n             'Paquet',\n             'Plaquette',\n             'Carton',\n             'Barquette',\n             'Aluminium'\n           ],\n           brands: [\n             'President'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/315/525/120/5500/front_fr.150.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3155251205500' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3284230011884',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3284230011884 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3284230011884/8-pains-au-lait-bio-deja-fendus-la-boulangere-bio',\n           product_name: '8 Pains au lait Bio déjà fendus - La Boulangère Bio - 280 g',\n           quantity: '280 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Snacks',\n             'Cereals and potatoes',\n             'Sweet snacks',\n             'Breakfasts',\n             'Viennoiseries',\n             'Breads',\n             'Milk bread rolls'\n           ],\n           packaging: [\n             'Sachet plastique',\n             'Film en plastique'\n           ],\n           brands: [\n             'La Boulangère Bio'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/328/423/001/1884/front_fr.109.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3284230011884' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n       +   code: Int,\n       +   barcode: String,\n       +   url: String,\n       +   product_name: String,\n       +   quantity: String,\n       ?   categories?: ProductCreatecategoriesInput | String[],\n       ?   packaging?: ProductCreatepackagingInput | String[],\n       ?   brands?: ProductCreatebrandsInput | String[],\n       +   image_url: String,\n       ?   id?: String,\n       ?   status?: draft | imported,\n       ?   imported_at?: DateTime\n         }\n       })\n\nArgument code for data.code is missing.\nArgument barcode for data.barcode is missing.\nArgument url for data.url is missing.\nArgument product_name for data.product_name is missing.\nArgument quantity for data.quantity is missing.\nArgument image_url for data.image_url is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3017760000062',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017760000062 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017760000062/veritable-petit-beurre-lu',\n           product_name: 'Véritable Petit beurre - LU - 12 X 3',\n           quantity: '12 X 3',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Cakes'\n           ],\n           packaging: [\n             'Sachets plastiques',\n             'Carton',\n             'sachet individuel',\n             'Film en plastique',\n             'Snack'\n           ],\n           brands: [\n             'LU'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/776/000/0062/front_en.70.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017760000062' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3182180002115',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3182180002115 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3182180002115/grilletine-pasquier',\n           product_name: 'Grilletine - Pasquier - 242 g',\n           quantity: '242 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Rusks',\n             'Toasts',\n             'Toasted bread rolls'\n           ],\n           packaging: [\n             'Point vert',\n             'Pensez au tri!',\n             'Film plastique à jeter',\n             'Etui carton à recycler',\n             'Film en plastique',\n             'Etui en carton',\n             'Sachets fraîcheur de partitions film plastique',\n             'Film en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Pasquier',\n             'Brioche Pasquier'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/318/218/000/2115/front_en.86.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3182180002115' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3229820019192',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820019192 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820019192/pain-complet-3-cereales-bjorg',\n           product_name: 'Pain complet 3 céréales - Bjorg - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Wholemeal breads'\n           ],\n           packaging: [\n             'Plastique',\n             'Sachet',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/001/9192/front.4.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820019192' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3073781115345',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3073781115345 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3073781115345/kiri-creme-8-portions',\n           product_name: 'KIRI CREME - 8 portions - 160 g',\n           quantity: '160 g',\n           categories: [\n             'Dairies',\n             'Fermented foods',\n             'Spreads',\n             'Fermented milk products',\n             'Salted spreads',\n             'Cheeses',\n             'Cheese spreads'\n           ],\n           packaging: [\n             'Feuille en métal',\n             'Étui en carton',\n             'Feuille en métal',\n             'Etui en carton'\n           ],\n           brands: [\n             'Kiri'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/307/378/111/5345/front_fr.77.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3073781115345' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '17192008',\n                 ~~~~~~~~~~\n           barcode: '17192008',\n           url: 'https://world.openfoodfacts.org/product/17192008/omega-3-sel-de-mer-becel',\n           product_name: 'Omega 3 sel de mer - Becel - 400g',\n           quantity: '400g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Fats',\n             'Spreads',\n             'Salted spreads',\n             'Spreadable fats',\n             'Vegetable fats',\n             'Plant-based spreads',\n             'Margarines',\n             'Salted margarines'\n           ],\n           packaging: [\n             'Barquette'\n           ],\n           brands: [\n             'Becel'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/17192008/front_en.28.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '17192008' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3387390326574',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3387390326574 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3387390326574/cookie-crisp-nestle',\n           product_name: 'Cookie Crisp - Nestlé - 375 g',\n           quantity: '375 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Puffed grains',\n             'Chocolate cereals',\n             'Puffed cereals'\n           ],\n           packaging: [\n             'Carton',\n             'Plastique',\n             'Boîte',\n             'Sachet',\n             'Film en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Nestlé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/338/739/032/6574/front_en.235.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3387390326574' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5053827101066',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5053827101066 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5053827101066/miel-pops-kellogg-s',\n           product_name: 'Miel Pops - Kellogg\\'s - 400 g',\n           quantity: '400 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Cereals with honey'\n           ],\n           packaging: [\n             'Carton',\n             'Boite',\n             'Plastique',\n             'Sachet'\n           ],\n           brands: [\n             'Kellogg\\'s'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/505/382/710/1066/front_fr.29.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5053827101066' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3760049794298',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3760049794298 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3760049794298/pain-de-mie-bio-cereales-et-graines-la-boulangere-bio',\n           product_name: 'Pain de mie bio Céréales et graines - La Boulangère Bio - 500 g - 14 tranches',\n           quantity: '500 g - 14 tranches',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'Multigrain sliced breads'\n           ],\n           packaging: [\n             'Sachet plastique et fermoir à jeter',\n             'Sachet plastique et fermoir à jeter',\n             'Sachet',\n             'Film en plastique',\n             'Plastique'\n           ],\n           brands: [\n             'La Boulangère Bio'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/376/004/979/4298/front_fr.132.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3760049794298' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7622300689124',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622300689124 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622300689124/granola-lu',\n           product_name: 'Granola - LU - 276 g',\n           quantity: '276 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits',\n             'Drop cookies',\n             'Chocolate chip cookies'\n           ],\n           packaging: [\n             'Plastique',\n             'Refermable'\n           ],\n           brands: [\n             'LU',\n             'Mondelez'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/230/068/9124/ingredients_en.64.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622300689124' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5010477354051',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5010477354051 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5010477354051/muesli-bio-jordans',\n           product_name: 'Muesli Bio - Jordans - 450g',\n           quantity: '450g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Cereals with fruits',\n             'Mueslis with fruits',\n             'fr:Cereales completes'\n           ],\n           packaging: [\n             'Carton'\n           ],\n           brands: [\n             'Jordans'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/501/047/735/4051/front_fr.80.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5010477354051' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '8000500037560',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8000500037560 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8000500037560/kinder-bueno',\n           product_name: 'Kinder Bueno - 43g',\n           quantity: '43g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Confectioneries',\n             'Bars',\n             'Chocolate candies',\n             'Chocolate bars',\n             'Chocolate biscuity bars',\n             'Chocolate nuts cookie bars'\n           ],\n           packaging: [\n             'Plastique'\n           ],\n           brands: [\n             'Kinder'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/800/050/003/7560/front_en.192.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8000500037560' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7311070032611',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7311070032611 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7311070032611/krisprolls',\n           product_name: 'Krisprolls - 425 g',\n           quantity: '425 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Rusks',\n             'Toasts',\n             'Toasted bread rolls',\n             'Wholemeal rusks'\n           ],\n           packaging: [\n             'Sachet papier'\n           ],\n           brands: [\n             'KRISPROLLS'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/731/107/003/2611/front_fr.62.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7311070032611' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '20724696',\n                 ~~~~~~~~~~\n           barcode: '20724696',\n           url: 'https://world.openfoodfacts.org/product/20724696/kalifornische-mandeln-naturbelassen-alesto',\n           product_name: 'Kalifornische Mandeln, naturbelassen - Alesto - 200g',\n           quantity: '200g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Snacks',\n             'Salty snacks',\n             'Nuts and their products',\n             'Nuts',\n             'Almonds'\n           ],\n           packaging: [\n             'Doypack',\n             'mixed plastic-bag',\n             '7 OPP/PETmet/PE'\n           ],\n           brands: [\n             'Alesto'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/20724696/front_en.147.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '20724696' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3155251205524',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3155251205524 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3155251205524/beurre-tendre-doux-president',\n           product_name: 'Beurre Tendre Doux - Président - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Dairies',\n             'Fats',\n             'Spreads',\n             'Spreadable fats',\n             'Animal fats',\n             'Milkfat',\n             'Dairy spread',\n             'Butters',\n             'Butter fat',\n             'Sweet cream butters'\n           ],\n           packaging: [\n             'Frais',\n             'Plastique',\n             'Barquette'\n           ],\n           brands: [\n             'Président',\n             'Lactalis'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/315/525/120/5524/front_fr.83.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3155251205524' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n       +   code: Int,\n       +   barcode: String,\n       +   url: String,\n       +   product_name: String,\n       +   quantity: String,\n       ?   categories?: ProductCreatecategoriesInput | String[],\n       ?   packaging?: ProductCreatepackagingInput | String[],\n       ?   brands?: ProductCreatebrandsInput | String[],\n       +   image_url: String,\n       ?   id?: String,\n       ?   status?: draft | imported,\n       ?   imported_at?: DateTime\n         }\n       })\n\nArgument code for data.code is missing.\nArgument barcode for data.barcode is missing.\nArgument url for data.url is missing.\nArgument product_name for data.product_name is missing.\nArgument quantity for data.quantity is missing.\nArgument image_url for data.image_url is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n       +   code: Int,\n       +   barcode: String,\n       +   url: String,\n       +   product_name: String,\n       +   quantity: String,\n       ?   categories?: ProductCreatecategoriesInput | String[],\n       ?   packaging?: ProductCreatepackagingInput | String[],\n       ?   brands?: ProductCreatebrandsInput | String[],\n       +   image_url: String,\n       ?   id?: String,\n       ?   status?: draft | imported,\n       ?   imported_at?: DateTime\n         }\n       })\n\nArgument code for data.code is missing.\nArgument barcode for data.barcode is missing.\nArgument url for data.url is missing.\nArgument product_name for data.product_name is missing.\nArgument quantity for data.quantity is missing.\nArgument image_url for data.image_url is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3017760363990',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3017760363990 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3017760363990/biscotte-fibres-heudebert',\n           product_name: 'Biscotte Fibres+ - Heudebert - 280g, 2 sachets de 16 biscottes',\n           quantity: '280g, 2 sachets de 16 biscottes',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Frozen foods',\n             'Breads',\n             'Rusks',\n             'Toasts',\n             'Multigrain rusks',\n             'Wholemeal rusks'\n           ],\n           packaging: [\n             'Film plastique à jeter',\n             'Étui carton à recycler',\n             'Point vert',\n             'Pensez au tri!',\n             'Film plastique à jeter'\n           ],\n           brands: [\n             'Heudebert',\n             'Lu',\n             'Mondelez'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/301/776/036/3990/front_fr.108.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3017760363990' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3161711001971',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3161711001971 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3161711001971/caprice-des-dieux',\n           product_name: 'Caprice des dieux - 300 g',\n           quantity: '300 g',\n           categories: [\n             'Dairies',\n             'Fermented foods',\n             'Fermented milk products',\n             'Cheeses',\n             'Soft cheeses with bloomy rind',\n             'Soft cheese with a natural rind',\n             'Soft cheeses with washed rind'\n           ],\n           packaging: [\n             'Carton',\n             'pot carton',\n             'Frais'\n           ],\n           brands: [\n             'Caprice des Dieux',\n             'Savencia'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/316/171/100/1971/front_en.87.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3161711001971' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3033710065783',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3033710065783 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3033710065783/le-choco-nestle',\n           product_name: 'Le Choco - Nestlé - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Beverages',\n             'Breakfasts',\n             'Cocoa and its products',\n             'Hot beverages',\n             'Cocoa and chocolate powders',\n             'Instant beverages',\n             'Non-Alcoholic beverages',\n             'Cocoa powders',\n             'Chocolate powders',\n             'Cocoa powder for beverages with sugar'\n           ],\n           packaging: [\n             'Boite',\n             'Couvercle Plastique',\n             'opercule plastique',\n             'Opercule en métal',\n             'Canette'\n           ],\n           brands: [\n             'Nestlé',\n             'Le chocolat'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/303/371/006/5783/front_en.184.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3033710065783' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3252210390014',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3252210390014 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3252210390014/lactel',\n           product_name: 'Lactel - 1 L',\n           quantity: '1 L',\n           categories: [\n             'Dairies',\n             'Milks',\n             'Homogenized milks',\n             'Semi-skimmed milks',\n             'UHT Milks'\n           ],\n           packaging: [\n             'bouteille plastique',\n             'Bouchon plastique 05 (PP)',\n             'Bouteille plastique 02 (PEHD)',\n             'Bouteille',\n             '05',\n             'PEHD'\n           ],\n           brands: [\n             'Lactel'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/325/221/039/0014/front_en.161.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3252210390014' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3502110006790',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3502110006790 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3502110006790/tropicana-pure-premium-orange-sans-pulpe-format-familial-1-5-l',\n           product_name: 'Tropicana Pure premium orange sans pulpe format familial 1,5 L - 1500 ml',\n           quantity: '1500 ml',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based beverages',\n             'Fruit-based beverages',\n             'Juices and nectars',\n             'Fruit juices',\n             'Orange juices',\n             'Squeezed juices',\n             'Squeezed orange juices'\n           ],\n           packaging: [\n             'Bouteille',\n             'Plastique',\n             'Bouteille en plastique'\n           ],\n           brands: [\n             'Tropicana'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/350/211/000/6790/front_fr.64.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3502110006790' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '8001505003529',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8001505003529 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8001505003529/nocciolata-bio-rigoni-di-asiago',\n           product_name: 'nocciolata bio - Rigoni di Asiago - 350 g',\n           quantity: '350 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads',\n             'fr:nocciolata'\n           ],\n           packaging: [\n             'Verre'\n           ],\n           brands: [\n             'Rigoni di Asiago'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/800/150/500/3529/front_fr.91.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8001505003529' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5010029220773',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5010029220773 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5010029220773/weetabix',\n           product_name: 'Weetabix - 645g',\n           quantity: '645g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals'\n           ],\n           packaging: [\n             'Boite'\n           ],\n           brands: [\n             'Weetabix'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/501/002/922/0773/front_en.128.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5010029220773' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3228857000838',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228857000838 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228857000838/harrys-pain-de-mie-american-sandwich-nature',\n           product_name: 'Harrys pain de mie american sandwich nature - 550 g',\n           quantity: '550 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads'\n           ],\n           packaging: [\n             'Sac plastique',\n             'Sachet en plastique',\n             'Enveloppe'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/700/0838/front_fr.105.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228857000838' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '8711200548002',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8711200548002 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8711200548002/amora-grand-mayonn-415g',\n           product_name: 'Amora grand mayonn 415g - 415 g',\n           quantity: '415 g',\n           categories: [\n             'Groceries',\n             'Sauces',\n             'Mayonnaises',\n             'Dijon mayonnaises'\n           ],\n           packaging: [\n             'Flacon',\n             'Plastique',\n             'Bouteille',\n             'Bouteille en plastique'\n           ],\n           brands: [\n             'Amora',\n             'Unilever'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/871/120/054/8002/front.13.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8711200548002' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5449000267412',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5449000267412 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5449000267412/coca-cola',\n           product_name: 'Coca-Cola - 1,25 L',\n           quantity: '1,25 L',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Sodas',\n             'Non-Alcoholic beverages',\n             'Colas',\n             'Sweetened beverages'\n           ],\n           packaging: [\n             'Bouteille et bouchon plastique à recycler',\n             'bouteille plastique'\n           ],\n           brands: [\n             'Coca-Cola'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/544/900/026/7412/front_en.94.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5449000267412' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3228850000262',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228850000262 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228850000262/harrys-american-sandwich-7-cereales',\n           product_name: 'Harrys American Sandwich 7 céréales - 550 g',\n           quantity: '550 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads',\n             'Multigrain sliced breads'\n           ],\n           packaging: [\n             'Plastique',\n             'Sachet'\n           ],\n           brands: [\n             'Harrys'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/885/000/0262/front_fr.108.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228850000262' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3175681209282',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175681209282 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175681209282/biscuits-aux-pommes-gerble',\n           product_name: 'Biscuits aux pommes - Gerblé - 360 g',\n           quantity: '360 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits'\n           ],\n           packaging: [\n             'Carton'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/120/9282/front_fr.62.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175681209282' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5411188112709',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5411188112709 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5411188112709/lait-d-amande-grillee-sans-sucre-alpro',\n           product_name: 'Lait D’amande Grillée Sans Sucre - Alpro - 1 l,',\n           quantity: '1 l,',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based foods',\n             'Dairies',\n             'Plant-based beverages',\n             'Milks'\n           ],\n           packaging: [\n             'Tetra Pak',\n             'Tetra Brik',\n             'Brique en carton',\n             'composite-carton',\n             'Brique',\n             'Tetra Brik Aseptic'\n           ],\n           brands: [\n             'Alpro'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/541/118/811/2709/front_en.269.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5411188112709' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3229820116716',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820116716 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820116716/muesli-bjorg',\n           product_name: 'Muesli - Bjorg - 750 g',\n           quantity: '750 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Cereals with fruits',\n             'Mueslis with fruits'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/011/6716/front_fr.152.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820116716' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5050083516313',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5050083516313 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5050083516313/cereales-extra-kellogg-s-pepites-chocolat-au-lait',\n           product_name: 'Céréales Extra Kellogg\\'s Pépites Chocolat au lait - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Chocolate cereals',\n             'Crunchy cereal clusters',\n             'Cereal clusters with chocolate'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique'\n           ],\n           brands: [\n             'Kellogg’s'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/505/008/351/6313/front_fr.100.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5050083516313' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5010477356239',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5010477356239 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5010477356239/muesli-bio-chocolat-noir-jordans',\n           product_name: 'Muesli bio chocolat noir - Jordans - 450 g',\n           quantity: '450 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Mueslis with chocolate'\n           ],\n           packaging: [\n             'Etui en carton',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Jordans'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/501/047/735/6239/front_fr.73.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5010477356239' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3088545004001',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3088545004001 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3088545004001/l-une-de-miel-lune-de-miel',\n           product_name: 'L\\'une de miel - Lune de Miel - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Bee products',\n             'Farming products',\n             'Sweet spreads',\n             'Sweeteners',\n             'Honeys',\n             'Flower honeys',\n             'Liquid honeys'\n           ],\n           packaging: [\n             'Flacon',\n             'Plastique',\n             'Squeezer'\n           ],\n           brands: [\n             'Lune de Miel'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/308/854/500/4001/front_en.11.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3088545004001' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3095757370015',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3095757370015 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3095757370015/le-superieur-cuit-a-l-etouffee-25-sel-4-tranches-fleury-michon',\n           product_name: 'Le supérieur cuit à l\\'étouffée -25% sel* - 4 tranches - Fleury Michon - 160 g',\n           quantity: '160 g',\n           categories: [\n             'Meats',\n             'Prepared meats',\n             'Hams',\n             'White hams',\n             'Products with reduced salt',\n             'Prepared meats with less salt',\n             'White hams with less salt'\n           ],\n           packaging: [\n             'Barquette',\n             'Plastique',\n             'Frais',\n             'Barquette',\n             'Film en plastique'\n           ],\n           brands: [\n             'Fleury Michon'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/309/575/737/0015/front_fr.161.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3095757370015' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3073781070309',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3073781070309 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3073781070309/la-vache-qui-rit-32-portions',\n           product_name: 'La Vache qui rit 32 portions - 535 g',\n           quantity: '535 g',\n           categories: [\n             'Dairies',\n             'Fermented foods',\n             'Spreads',\n             'Fermented milk products',\n             'Salted spreads',\n             'Cheeses',\n             'Cheese spreads',\n             'Fromages',\n             'Fromages industriels',\n             'Fromages à pâte fondue',\n             'Fromages à tartiner',\n             'Produits fermentés',\n             'Produits laitiers',\n             'Produits laitiers fermentés',\n             'Produits à tartiner',\n             'Produits à tartiner salés'\n           ],\n           packaging: [\n             'Carton',\n             'Aluminium'\n           ],\n           brands: [\n             'La vache qui rit',\n             'Bel'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/307/378/107/0309/front_fr.64.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3073781070309' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3229820181950',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820181950 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820181950/fourres-chocolat-au-lait-bio-bjorg',\n           product_name: 'Fourrés Chocolat au lait BIO - Bjorg - 225 g',\n           quantity: '225 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits',\n             'Filled biscuits',\n             'Milk chocolate biscuits'\n           ],\n           packaging: [\n             'Film en plastique'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/018/1950/front_fr.67.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820181950' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3023290634578',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3023290634578 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3023290634578/nestle',\n           product_name: 'Nestlé - 150 gr',\n           quantity: '150 gr',\n           categories: [\n             'Dairies',\n             'Desserts',\n             'Fermented foods',\n             'Fermented milk products',\n             'Fresh foods',\n             'Yogurts',\n             'Plain yogurts',\n             'Stirred yogurts',\n             'Greek-style yogurts',\n             'Plain stirred yogurts',\n             'Whole milk yogurts'\n           ],\n           packaging: [\n             'Frais',\n             'Pot',\n             'Plastique',\n             'Opercule',\n             '6'\n           ],\n           brands: [\n             'Nestlé',\n             'Yaos'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/302/329/063/4578/front.13.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3023290634578' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3228021170039',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3228021170039 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3228021170039/camembert-president',\n           product_name: 'Camembert - Président - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Dairies',\n             'Fermented foods',\n             'Fermented milk products',\n             'Cheeses',\n             'Cow cheeses',\n             'Soft cheeses with bloomy rind',\n             'Camemberts',\n             'Pasteurized cheeses',\n             'Pasteurized camembert'\n           ],\n           packaging: [\n             'Frais',\n             'Point vert',\n             'Triman',\n             'Pensez au tri!',\n             'Feuille à jeter',\n             'Boite et couvercle carton à recycler',\n             'Boite bois',\n             'Frais'\n           ],\n           brands: [\n             'Président'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/802/117/0039/front_fr.99.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3228021170039' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5000112611861',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5000112611861 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5000112611861/gout-original-coca-cola',\n           product_name: 'Goût original - Coca-Cola - 1.75 L ℮',\n           quantity: '1.75 L ℮',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Sodas',\n             'Colas',\n             'Boissons',\n             'Boissons avec sucre ajouté',\n             'Boissons gazeuses',\n             'Sodas au cola'\n           ],\n           packaging: [\n             'Bouteille',\n             'Plastique',\n             'Pensez au tri!',\n             'Point vert',\n             'Bouteille et bouchon plastique à recycler',\n             'Bouteille plastique',\n             'Bouteille en plastique',\n             'Bouchon en plastique'\n           ],\n           brands: [\n             'Coca-Cola'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/500/011/261/1861/front_fr.132.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5000112611861' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3176571983008',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3176571983008 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3176571983008/lait-viva',\n           product_name: 'Lait Viva® - 1 L',\n           quantity: '1 L',\n           categories: [\n             'Dairies',\n             'Milks',\n             'Homogenized milks',\n             'UHT Milks',\n             'Pasteurised milks'\n           ],\n           packaging: [\n             'Brique',\n             'Carton',\n             'Bouchon',\n             'Plastique',\n             'Film en plastique'\n           ],\n           brands: [\n             'Viva'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/657/198/3008/front_fr.112.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3176571983008' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3046920028721',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3046920028721 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3046920028721/lindt',\n           product_name: 'Lindt - 50 g',\n           quantity: '50 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Chocolates',\n             'Dark chocolates'\n           ],\n           packaging: [\n             'Kunststoff',\n             'Carton',\n             'Plastique',\n             'Film en plastique',\n             'Barquette en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Lindt'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/304/692/002/8721/front_en.192.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3046920028721' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3175681105423',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175681105423 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175681105423/cookie-cacao-pepites-gerble',\n           product_name: 'Cookie cacao pépites - Gerblé - 130 g',\n           quantity: '130 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits'\n           ],\n           packaging: [\n             'boîte',\n             'Film en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/110/5423/front_en.80.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175681105423' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3664346312936',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3664346312936 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3664346312936/pate-a-tartiner-poulain',\n           product_name: 'Pâte à tartiner - Poulain - 400 g',\n           quantity: '400 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'Verre',\n             'Plastique'\n           ],\n           brands: [\n             'Poulain'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/366/434/631/2936/front_en.38.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3664346312936' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3182180060320',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3182180060320 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3182180060320/tartines-de-pain-ble-complet-24-tranches-pasquier',\n           product_name: 'Tartines de Pain Blé Complet ×24 Tranches - Pasquier - 240 g',\n           quantity: '240 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Rusks',\n             'Toasts'\n           ],\n           packaging: [\n             'Carton',\n             'Film en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Pasquier'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/318/218/006/0320/front_fr.82.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3182180060320' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3664346305860',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3664346305860 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3664346305860/poulain',\n           product_name: 'Poulain - 100 g',\n           quantity: '100 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Chocolates',\n             'Dark chocolates',\n             'Extra fine dark chocolates',\n             'fr:Chocolats noir à croquer',\n             'fr:chocolat-noir-en-tablette',\n             'fr:chocolat-noir-extra'\n           ],\n           packaging: [\n             'Plastique'\n           ],\n           brands: [\n             'Poulain'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/366/434/630/5860/front_en.88.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3664346305860' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3251491787810',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3251491787810 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3251491787810/gouter-aux-raisins-gerble',\n           product_name: 'gouter aux raisins - Gerblé - 4 paquets de 5 biscuits',\n           quantity: '4 paquets de 5 biscuits',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Dry biscuits'\n           ],\n           packaging: [\n             'Carton',\n             'sachet plastique',\n             'Paquet',\n             'boîte',\n             'Film en plastique',\n             'Etui en carton'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/325/149/178/7810/front_fr.101.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3251491787810' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5410126006957',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5410126006957 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5410126006957/the-original-speculoos-lotus',\n           product_name: 'The original speculoos - lotus - 400g',\n           quantity: '400g',\n           categories: [\n             'Snacks',\n             'Spreads',\n             'Sweet snacks',\n             'Breakfasts',\n             'Biscuits and cakes',\n             'Sweet spreads',\n             'Biscuits',\n             'fr:Pâtes à tartiner',\n             'Speculoos',\n             'Speculoos spreads'\n           ],\n           packaging: [\n             'Verre',\n             'Carton'\n           ],\n           brands: [\n             'Lotus'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/541/012/600/6957/front_en.161.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5410126006957' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3159470204948',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3159470204948 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3159470204948/cereales-special-k-kellogg-s-chocolat-noir',\n           product_name: 'Céréales Special K Kellogg\\'s Chocolat noir - 550 g',\n           quantity: '550 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Chocolate cereals',\n             'Extruded cereals',\n             'Cereal flakes with chocolate'\n           ],\n           packaging: [\n             'Boite carton',\n             'sachet',\n             'plastique',\n             'Sachet plastique à jeter',\n             'Etui carton à recycler',\n             'Boite carton'\n           ],\n           brands: [\n             'Kellogg\\'s',\n             'Special K'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/315/947/020/4948/front_en.133.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3159470204948' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '8076800195057',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8076800195057 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8076800195057/spaghetti-n-5-barilla',\n           product_name: 'Spaghetti n.5 - Barilla - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Cereals and their products',\n             'Pastas',\n             'Dry pastas',\n             'Durum wheat pasta',\n             'Spaghetti',\n             'Durum wheat spaghetti'\n           ],\n           packaging: [\n             'Carton',\n             'Karton',\n             '21 PAP',\n             'Boite',\n             'Unidad',\n             'Packung(en)',\n             'Pacchetto',\n             'Producto',\n             'Wrapper',\n             'card-box'\n           ],\n           brands: [\n             'Barilla'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/807/680/019/5057/front_en.406.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8076800195057' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3168930009795',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3168930009795 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3168930009795/quaker-muesli-croustillant-noix-de-pecan-noix-du-bresil',\n           product_name: 'Quaker Muesli Croustillant Noix de pécan & noix du Brésil - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Mueslis with nuts'\n           ],\n           packaging: [\n             'Plastique'\n           ],\n           brands: [\n             'QUAKER',\n             'Muesli Croustillant'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/316/893/000/9795/front_fr.92.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3168930009795' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3664346305990',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3664346305990 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3664346305990/grand-arome-32-de-cacao-poulain',\n           product_name: 'Grand Arôme 32% de Cacao - Poulain - 450 g',\n           quantity: '450 g',\n           categories: [\n             'Beverages',\n             'Breakfasts',\n             'Cocoa and its products',\n             'Dried products',\n             'Dried products to be rehydrated',\n             'Cocoa and chocolate powders',\n             'Instant beverages',\n             'Chocolate powders'\n           ],\n           packaging: [\n             'Plastique',\n             'Boîte',\n             'Boîte en plastique'\n           ],\n           brands: [\n             'Poulain'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/366/434/630/5990/front_fr.65.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3664346305990' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5411188103387',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5411188103387 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5411188103387/vanilla-alpro',\n           product_name: 'Vanilla - Alpro - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Desserts',\n             'Fermented foods',\n             'Non-dairy desserts',\n             'Non-dairy fermented foods',\n             'Non-dairy yogurts',\n             'Soy milk yogurts',\n             'Soy desserts',\n             'Flavoured soy dessert',\n             'Vanilla soy desserts'\n           ],\n           packaging: [\n             'papier plastique',\n             'pot',\n             'pp-tub',\n             'card-sleeve'\n           ],\n           brands: [\n             'Alpro'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/541/118/810/3387/front_en.167.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5411188103387' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5449000054227',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5449000054227 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5449000054227/coca-cola',\n           product_name: 'Coca cola - 1 L',\n           quantity: '1 L',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Sodas',\n             'Non-Alcoholic beverages',\n             'Colas',\n             'Sweetened beverages'\n           ],\n           packaging: [\n             'Bouteille',\n             '♳',\n             'Stück',\n             'pp-lid',\n             'pet-bottle',\n             'Bouchon en plastique',\n             '01 PET',\n             '02 PE-HD'\n           ],\n           brands: [\n             'Coca-Cola'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/544/900/005/4227/front_en.219.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5449000054227' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7613035866386',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613035866386 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613035866386/eau-hepar',\n           product_name: 'eau hepar - 1,5L',\n           quantity: '1,5L',\n           categories: [\n             'Beverages',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Natural mineral waters',\n             'Unsweetened beverages'\n           ],\n           packaging: [\n             'Plastique'\n           ],\n           brands: [\n             'Hepar'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/586/6386/front_fr.123.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613035866386' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3664346306003',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3664346306003 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3664346306003/grand-arome-32-de-cacao-poulain',\n           product_name: 'Grand Arôme 32% de Cacao - Poulain - 800 g',\n           quantity: '800 g',\n           categories: [\n             'Cocoa and its products',\n             'Cocoa and chocolate powders',\n             'Cocoa powders'\n           ],\n           packaging: [\n             'Plastique',\n             'Boîte en plastique'\n           ],\n           brands: [\n             'Poulain'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/366/434/630/6003/front_fr.104.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3664346306003' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '80177173',\n                 ~~~~~~~~~~\n           barcode: '80177173',\n           url: 'https://world.openfoodfacts.org/product/80177173/nutella-ferrero',\n           product_name: 'Nutella - Ferrero - 350 g',\n           quantity: '350 g',\n           categories: [\n             'Spreads',\n             'Breakfasts',\n             'Sweet spreads',\n             'fr:Pâtes à tartiner',\n             'Hazelnut spreads',\n             'Chocolate spreads',\n             'Cocoa and hazelnuts spreads'\n           ],\n           packaging: [\n             'Pot',\n             'Verre',\n             'Vidrio',\n             'glass-jar',\n             'other plastic-lid',\n             'ldpe-sleeve',\n             'pp-lid',\n             'card-lid'\n           ],\n           brands: [\n             'Ferrero'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/80177173/front_en.119.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '80177173' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3034470003107',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3034470003107 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3034470003107/original-benco',\n           product_name: 'Original - Benco - 400g',\n           quantity: '400g',\n           categories: [\n             'Beverages',\n             'Breakfasts',\n             'Cocoa and its products',\n             'Hot beverages',\n             'Cocoa and chocolate powders',\n             'Instant beverages',\n             'Cocoa powders',\n             'Chocolate powders',\n             'Cocoa powder for beverages with sugar',\n             'Sweetened beverages',\n             'fr:Granulés'\n           ],\n           packaging: [\n             'Boite',\n             'Plastique'\n           ],\n           brands: [\n             'Benco'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/303/447/000/3107/front_fr.151.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3034470003107' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7613035239562',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613035239562 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613035239562/nesquik-nestle',\n           product_name: 'Nesquik - Nestlé - 700 g',\n           quantity: '700 g',\n           categories: [\n             'Beverages',\n             'Breakfasts',\n             'Cocoa and its products',\n             'Hot beverages',\n             'Cocoa and chocolate powders',\n             'Instant beverages',\n             'Chocolate powders'\n           ],\n           packaging: [\n             'Plastique',\n             'Boîte',\n             'Boîte en plastique',\n             'Opercule en plastique'\n           ],\n           brands: [\n             'Nestlé',\n             'Nesquik'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/523/9562/front_fr.185.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613035239562' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3033490506629',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3033490506629 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3033490506629/jockey-onctueux-et-doux-danone',\n           product_name: 'Jockey Onctueux et Doux - Danone - 1 kg',\n           quantity: '1 kg',\n           categories: [\n             'Dairies',\n             'Desserts',\n             'Fermented foods',\n             'Fermented milk products',\n             'Cheeses',\n             'Fresh foods',\n             'Dairy desserts',\n             'Refrigerated foods',\n             'fr:Fromages blancs',\n             'fr:Fromages blancs natures'\n           ],\n           packaging: [\n             'Pot en plastique (Polystyrène alimentaire)',\n             'pot en plastique (polystyrène alimentaire)',\n             'Frais',\n             'Plastique',\n             'pot'\n           ],\n           brands: [\n             'Danone',\n             'Jockey'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/303/349/050/6629/front_fr.34.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3033490506629' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7622210476104',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622210476104 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622210476104/veritable-petit-beurre-lu',\n           product_name: 'Véritable petit beurre - Lu - 400g (48 biscuits)',\n           quantity: '400g (48 biscuits)',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'fr:Alimentaire'\n           ],\n           packaging: [\n             'Papier',\n             'Sachet plastique'\n           ],\n           brands: [\n             'Lu'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/221/047/6104/front_fr.76.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622210476104' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '4008713756661',\n                 ~~~~~~~~~~~~~~~\n           barcode: '4008713756661 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/4008713756661/copos-de-avena-bruggen',\n           product_name: 'Copos de avena - Brüggen - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Flakes',\n             'Cereal flakes',\n             'Rolled flakes',\n             'Rolled oats'\n           ],\n           packaging: [\n             'Cartón',\n             'Papel'\n           ],\n           brands: [\n             'Brüggen'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/400/871/375/6661/front_es.65.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '4008713756661' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3182180001996',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3182180001996 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3182180001996/biscottes-ssa-ble-complet-pasquier',\n           product_name: 'Biscottes SSA Blé complet - Pasquier - 300 g',\n           quantity: '300 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Rusks',\n             'Wholemeal rusks',\n             'Aliments d\\'origine végétale',\n             'Aliments et boissons à base de végétaux',\n             'Céréales et pommes de terre',\n             'Pains',\n             'Pains grillés'\n           ],\n           packaging: [\n             'Boîte Carton Film Plastique'\n           ],\n           brands: [\n             'Pasquier'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/318/218/000/1996/front_fr.28.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3182180001996' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3760049790252',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3760049790252 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3760049790252/pain-de-mie-a-la-farine-complete-toastiligne-la-boulangere',\n           product_name: 'Pain de mie à la farine complète Toastiligne - la boulangère - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Sliced breads'\n           ],\n           packaging: [\n             'Plastique',\n             '12tranches'\n           ],\n           brands: [\n             'la boulangère'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/376/004/979/0252/front_fr.95.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3760049790252' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5411188118961',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5411188118961 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5411188118961/alpro-almond',\n           product_name: 'Alpro almond - 500 gr',\n           quantity: '500 gr',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Snacks',\n             'Desserts',\n             'Fermented foods',\n             'Sweet snacks',\n             'Confectioneries',\n             'Non-dairy desserts',\n             'Non-dairy fermented foods',\n             'Plant-based beverages',\n             'Milk substitute',\n             'Non-dairy yogurts',\n             'Plant milks',\n             'Soy milk yogurts'\n           ],\n           packaging: [\n             'Triman',\n             'Point vert',\n             'Pensez au tri!',\n             'Pot et couvercle plastique - opercule aluminium à jeter',\n             'Etiquette carton à recycler',\n             'Frais',\n             'Opercule en métal'\n           ],\n           brands: [\n             'Alpro'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/541/118/811/8961/front_it.93.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5411188118961' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '87157239',\n                 ~~~~~~~~~~\n           barcode: '87157239',\n           url: 'https://world.openfoodfacts.org/product/87157239/heinz-ketchup-570-g-top-up',\n           product_name: 'Heinz Ketchup 570 g top up - 570 g - 500 ml',\n           quantity: '570 g - 500 ml',\n           categories: [\n             'Groceries',\n             'Sauces',\n             'Tomato sauces',\n             'Ketchup',\n             'Tomato Ketchup'\n           ],\n           packaging: [\n             'Plastic',\n             'Bottle',\n             'Flacon',\n             'Bouteille',\n             'Botellas',\n             'bouteille plastique',\n             'tin can',\n             '01 pet',\n             'Green Dot'\n           ],\n           brands: [\n             'Heinz'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/87157239/front_en.133.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '87157239' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5411188110835',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5411188110835 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5411188110835/roasted-almond-milk-alpro',\n           product_name: 'Roasted almond milk - Alpro - 1 l',\n           quantity: '1 l',\n           categories: [\n             'Plant-based foods and beverages',\n             'Beverages',\n             'Plant-based foods',\n             'Nuts and their products',\n             'Plant-based beverages',\n             'Milk substitute',\n             'Plant milks',\n             'Nut milks',\n             'Almond milks',\n             'Alimente-pe-bază-de-plante',\n             'Alimente-și-băuturi-pe-bază-de-plante',\n             'Băuturi',\n             'Băuturi-din-plante'\n           ],\n           packaging: [\n             'Tetra Pak',\n             'Brique',\n             'tetraPak-carton',\n             'composite-carton',\n             'C/PAP-81'\n           ],\n           brands: [\n             'Alpro'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/541/118/811/0835/front_en.349.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5411188110835' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5010477352590',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5010477352590 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5010477352590/country-crisp-bio-chocolat-noir-jordans',\n           product_name: 'Country crisp bio Chocolat Noir - Jordans - 400 g',\n           quantity: '400 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Chocolate cereals',\n             'Crunchy cereal clusters',\n             'Cereal clusters with chocolate'\n           ],\n           packaging: [\n             'étui en carton à recycler',\n             'sachet en plastique à jeter',\n             'Etui en carton',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Jordans'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/501/047/735/2590/front_fr.56.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5010477352590' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7311070362664',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7311070362664 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7311070362664/krisprolls',\n           product_name: 'Krisprolls - 425 g',\n           quantity: '425 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breads',\n             'Toasts',\n             'Toasted bread rolls'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique'\n           ],\n           brands: [\n             'Krisprolls'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/731/107/036/2664/front_fr.9.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7311070362664' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3229820786605',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820786605 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820786605/crousti-avoine-chocolat-bjorg',\n           product_name: 'CROUSTI AVOINE CHOCOLAT - Bjorg - 500 g',\n           quantity: '500 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Chocolate cereals',\n             'Crunchy cereal clusters',\n             'Cereal clusters with chocolate'\n           ],\n           packaging: [\n             'Plastique',\n             'Sachet',\n             'Pochon',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/078/6605/front_en.203.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820786605' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7613034947611',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7613034947611 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7613034947611/nestle-chocapic-cereales',\n           product_name: 'NESTLE CHOCAPIC Céréales - 750 g',\n           quantity: '750 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Chocolate cereals'\n           ],\n           packaging: [\n             'Carton',\n             'Sachet',\n             'Plastique',\n             'Boite',\n             'Etui en carton',\n             'Film en plastique'\n           ],\n           brands: [\n             'Nestlé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/761/303/494/7611/front_fr.154.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7613034947611' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '5449000133328',\n                 ~~~~~~~~~~~~~~~\n           barcode: '5449000133328 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/5449000133328/coca-zero-coca-cola',\n           product_name: 'Coca Zéro - Coca-Cola - 1 litre',\n           quantity: '1 litre',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Artificially sweetened beverages',\n             'Sodas',\n             'Diet beverages',\n             'Colas',\n             'Diet sodas',\n             'Diet cola soft drink'\n           ],\n           packaging: [\n             'Bouteille',\n             'Plastique',\n             'pet-bottle'\n           ],\n           brands: [\n             'Coca-Cola'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/544/900/013/3328/front_fr.151.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '5449000133328' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '8000500167113',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8000500167113 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8000500167113/ferrero-rocher',\n           product_name: 'Ferrero Rocher - 375 g',\n           quantity: '375 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Cocoa and its products',\n             'Confectioneries',\n             'Chocolate candies',\n             'Bonbons'\n           ],\n           packaging: [\n             'Plastique',\n             'Aluminium',\n             'Papier',\n             'Boite',\n             'Grand Format',\n             'Green Dot'\n           ],\n           brands: [\n             'Ferrero'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/800/050/016/7113/front_en.136.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8000500167113' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3021769505602',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3021769505602 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3021769505602/pom-potes-pomme-nature-materne',\n           product_name: 'Pom\\'Potes Pomme Nature - Materne - 90 g',\n           quantity: '90 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Desserts',\n             'Fruits and vegetables based foods',\n             'Fruits based foods',\n             'Compotes',\n             'Apple compotes',\n             'Applesauces',\n             'Compotes to drink',\n             'fr:Compotes sans sucres'\n           ],\n           packaging: [\n             'Plastique',\n             'Sec'\n           ],\n           brands: [\n             'Materne',\n             'Pom\\'potes'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/302/176/950/5602/front_fr.80.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3021769505602' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3175681060586',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3175681060586 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3175681060586/gerble',\n           product_name: 'Gerblé - 132g',\n           quantity: '132g',\n           categories: [\n             'Snacks',\n             'Desserts',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits'\n           ],\n           packaging: [\n             'Papier'\n           ],\n           brands: [\n             'Gerblé'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/317/568/106/0586/front_en.75.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3175681060586' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3229820798110',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3229820798110 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3229820798110/granola-chocolat-bjorg',\n           product_name: 'Granola Chocolat - bjorg - 350 g',\n           quantity: '350 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Breakfasts',\n             'Cereals and their products',\n             'Breakfast cereals',\n             'Mueslis',\n             'Mueslis with chocolate'\n           ],\n           packaging: [\n             'paquet plastique'\n           ],\n           brands: [\n             'Bjorg'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/322/982/079/8110/front_fr.88.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3229820798110' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3068320123264',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3068320123264 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3068320123264/la-salvetat',\n           product_name: 'La salvetat - 1,15 L',\n           quantity: '1,15 L',\n           categories: [\n             'Beverages',\n             'Carbonated drinks',\n             'Waters',\n             'Spring waters',\n             'Mineral waters',\n             'Carbonated waters',\n             'Natural mineral waters',\n             'Carbonated mineral waters'\n           ],\n           packaging: [\n             'Bouteille',\n             'Plastique'\n           ],\n           brands: [\n             'La Salvetat',\n             'Danone'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/306/832/012/3264/front_fr.81.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3068320123264' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3256540002890',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3256540002890 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3256540002890/pains-au-lait-brioche-pasquier',\n           product_name: 'pains au lait - Brioche Pasquier - 8x35 g',\n           quantity: '8x35 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Viennoiseries',\n             'Milk bread rolls'\n           ],\n           packaging: [\n             'Plastique'\n           ],\n           brands: [\n             'Brioche Pasquier'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/325/654/000/2890/front_fr.64.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3256540002890' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '7622300336738',\n                 ~~~~~~~~~~~~~~~\n           barcode: '7622300336738 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/7622300336738/oreo-original',\n           product_name: 'Oreo Original - 154 g',\n           quantity: '154 g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Biscuits and cakes',\n             'Biscuits',\n             'Chocolate biscuits',\n             'Filled biscuits',\n             'Chocolate sandwich cookies'\n           ],\n           packaging: [\n             'Plastique',\n             'Sachet',\n             'composite-carton',\n             'mixed plastic-packet'\n           ],\n           brands: [\n             'Oreo'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/762/230/033/6738/front_en.145.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '7622300336738' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3608580823445',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3608580823445 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3608580823445/fraise-intense-bonne-maman',\n           product_name: 'Fraise Intense - Bonne Maman - 335 g',\n           quantity: '335 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Fruits and vegetables based foods',\n             'Spreads',\n             'Breakfasts',\n             'Fruits based foods',\n             'Plant-based spreads',\n             'Sweet spreads',\n             'Fruit and vegetable preserves',\n             'Jams',\n             'Berry jams',\n             'Low sugar fruit jam',\n             'Strawberry jams'\n           ],\n           packaging: [\n             'Bocal',\n             'Verre',\n             'Pot en verre',\n             'Capsule en métal'\n           ],\n           brands: [\n             'Bonne Maman'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/360/858/082/3445/front_fr.40.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3608580823445' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3366321051983',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3366321051983 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3366321051983/st-hubert-omega-3-sans-huile-de-palme-250g-doux',\n           product_name: 'St Hubert Omega 3 Sans Huile de Palme 250g Doux - 250 g',\n           quantity: '250 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Fats',\n             'Spreads',\n             'Salted spreads',\n             'Spreadable fats',\n             'Vegetable fats',\n             'Plant-based spreads',\n             'Margarines',\n             'Light margarines',\n             'Unsalted margarines',\n             'Light unsalted margarines',\n             'Plant-based pâtés',\n             '50-63-unsalted-vegetable-fat-margarine-type-high-in-omega-3'\n           ],\n           packaging: [\n             'Barquette',\n             'Plastique'\n           ],\n           brands: [\n             'St Hubert',\n             'St hubert omega 3'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/336/632/105/1983/front_fr.82.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3366321051983' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '8712100338694',\n                 ~~~~~~~~~~~~~~~\n           barcode: '8712100338694 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/8712100338694/maizena-fleur-mais-400g',\n           product_name: 'Maïzena fleur maïs 400g - 400 g',\n           quantity: '400 g',\n           categories: [\n             'Plant-based foods and beverages',\n             'Plant-based foods',\n             'Cereals and potatoes',\n             'Cereals and their products',\n             'Flours',\n             'Starches',\n             'Cereal starches',\n             'Corn starch'\n           ],\n           packaging: [\n             'Carton',\n             'Boîte',\n             'sachet papier',\n             'Boite carton à recycler',\n             'Film'\n           ],\n           brands: [\n             'Maïzena'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/871/210/033/8694/front.19.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '8712100338694' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/index.ts:31:42\n\n  28 brands,\n  29 image_url }: Props): Promise<void> => {\n  30 try {\n→ 31   const product = await prisma.product.create({\n         data: {\n           code: '3256540001008',\n                 ~~~~~~~~~~~~~~~\n           barcode: '3256540001008 (EAN / EAN-13)',\n           url: 'https://world.openfoodfacts.org/product/3256540001008/pains-au-chocolat-pasquier',\n           product_name: 'Pains au chocolat - Pasquier - 8 par 45g',\n           quantity: '8 par 45g',\n           categories: [\n             'Snacks',\n             'Sweet snacks',\n             'Viennoiseries',\n             'Chocolate croissant'\n           ],\n           packaging: [\n             'Sachet',\n             'Plastique',\n             'Clip en plastique',\n             'Sachet en plastique'\n           ],\n           brands: [\n             'Pasquier'\n           ],\n           image_url: 'https://world.openfoodfacts.org/images/products/325/654/000/1008/front_fr.103.400.jpg'\n         }\n       })\n\nArgument code: Got invalid value '3256540001008' on prisma.createOneProduct. Provided String, expected Int.\n\n"}
{"color":"red","level":"error","message":"GETPRODUCTS : Error: Evaluation failed: TypeError: Cannot read properties of null (reading 'innerText')\n    at __puppeteer_evaluation_script__:8:33"}
{"color":"red","level":"error","message":"SAVEPRODUCT : Error: \nInvalid `prisma.product.create()` invocation in\n/home/machine/Documents/fullstack-challenge/backend/api_scraping/src/repository/index.ts:30:42\n\n  27 brands,\n  28 image_url }: Props): Promise<void> => {\n  29 try {\n→ 30   const product = await prisma.product.create({\n         data: {\n           code: NaN,\n                 ~~~\n       +   barcode: String,\n       +   url: String,\n       +   product_name: String,\n       +   quantity: String,\n       ?   categories?: ProductCreatecategoriesInput | String[],\n       ?   packaging?: ProductCreatepackagingInput | String[],\n       ?   brands?: ProductCreatebrandsInput | String[],\n       +   image_url: String,\n       ?   id?: String,\n       ?   status?: draft | imported,\n       ?   imported_at?: DateTime\n         }\n       })\n\nArgument code: Got invalid value NaN on prisma.createOneProduct. Provided Float, expected Int.\nArgument barcode for data.barcode is missing.\nArgument url for data.url is missing.\nArgument product_name for data.product_name is missing.\nArgument quantity for data.quantity is missing.\nArgument image_url for data.image_url is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n"}
